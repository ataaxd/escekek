import base64
exec(base64.b64decode('IyBtb2R1bGUKZnJvbSBvcyBpbXBvcnQgc3lzdGVtCmZyb20gdGltZSBpbXBvcnQgc2xlZXAKaW1wb3J0IHN5cywgZGF0ZXRpbWUKaW1wb3J0IG9zLHN5cyx0aW1lCmltcG9ydCByZXF1ZXN0cywganNvbiwgdGltZSwgdGhyZWFkaW5nLCBvcywgc3lzCmZyb20gY29sb3JhbWEgaW1wb3J0IEZvcmUsIGluaXQKaW1wb3J0IGl0ZXJ0b29scwppbXBvcnQgcmFuZG9tCmltcG9ydCBweWZpZ2xldAppbXBvcnQgYmFzZTY0CmltcG9ydCBzb2NrZXQKaW1wb3J0IHNodXRpbAppbXBvcnQgY29uY3VycmVudC5mdXR1cmVzCgpyZWQgPSBGb3JlLkxJR0hUUkVEX0VYCmdyZWVuID0gRm9yZS5MSUdIVEdSRUVOX0VYCnllbGxvdyA9IEZvcmUuTElHSFRZRUxMT1dfRVgKYmx1ZSA9IEZvcmUuTElHSFRCTFVFX0VYCndoaXRlID0gRm9yZS5XSElURQpvdHAgPSByYW5kb20ucmFuZHJhbmdlKDEwMDAwMCwgMTAwMDAwMCkKCkdJVEhVQl9SQVdfVVJMID0gImh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9hdGFheGQxL3VzZXIvcmVmcy9oZWFkcy9tYWluL3VzZXIiCgpkZWYgbG9hZF91c2VycygpOgogICAgIiIiTG9hZCBhbmQgcmV0dXJuIGEgbGlzdCBvZiB1c2VycyBmcm9tIHRoZSBHaXRIdWIgcmF3IFVSTCIiIgogICAgdHJ5OgogICAgICAgIHJlc3BvbnNlID0gcmVxdWVzdHMuZ2V0KEdJVEhVQl9SQVdfVVJMKQogICAgICAgIHJlc3BvbnNlLnJhaXNlX2Zvcl9zdGF0dXMoKSAgIyBSYWlzZSBhbiBleGNlcHRpb24gZm9yIGJhZCBzdGF0dXMgY29kZXMKICAgICAgICByZXR1cm4gcmVzcG9uc2UuanNvbigpICAjIEFzc3VtaW5nIHRoZSByZXNwb25zZSBpcyBhIEpTT04gb2JqZWN0IHdpdGggdXNlcnMKICAgIGV4Y2VwdCByZXF1ZXN0cy5SZXF1ZXN0RXhjZXB0aW9uIGFzIGU6CiAgICAgICAgcHJpbnQoZiJFcnJvciBmZXRjaGluZyBkYXRhOiB7ZX0iKQogICAgICAgIHJldHVybiB7fQoKZGVmIGtleSgpOgogICAgIiIiT3BlbiBhIHNwZWNpZmljIFVSTCBiYXNlZCBvbiB0aGUgb3BlcmF0aW5nIHN5c3RlbSIiIgogICAgaW1wb3J0IG9zCiAgICBpbXBvcnQgc3lzCiAgICBpZiBzeXMucGxhdGZvcm0uc3RhcnRzd2l0aCgid2luZG93cyIpOgogICAgICAgIG9zLnN5c3RlbSgic3RhcnQgXCJcIiBodHRwczovL3NmbC5nbC9jQ0JZIikKICAgIGVsaWYgc3lzLnBsYXRmb3JtLnN0YXJ0c3dpdGgoImxpbnV4Iik6CiAgICAgICAgb3Muc3lzdGVtKCJ0ZXJtdXgtb3Blbi11cmwgaHR0cHM6Ly9zZmwuZ2wvY0NCWSIpCiAgICBlbHNlOgogICAgICAgIG9zLnN5c3RlbSgib3BlbiBcIlwiIGh0dHBzOi8vc2ZsLmdsL2NDQlkiKQogICAgICAgIApmcm9tIGRhdGV0aW1lIGltcG9ydCBkYXRldGltZQpkZWYgbG9naW4oKToKICAgICIiIkxvZ2luIGZ1bmN0aW9uIHRoYXQgY2hlY2tzIGlmIHRoZSB1c2VybmFtZSBleGlzdHMgYW5kIGlzIG5vdCBleHBpcmVkIiIiCiAgICBnbG9iYWwgdXNlcm5hbWUsIGV4cGlyZWRfZGF0ZSwgbW9uZXkKICAgIHVzZXJuYW1lID0gaW5wdXQoZiJ7eWVsbG93fU1hc3VrYW4gdXNlcm5hbWUge3doaXRlfTogIikKCiAgICAjIEZldGNoIHRoZSBsaXN0IG9mIHVzZXJzIGZyb20gR2l0SHViCiAgICB1c2VycyA9IGxvYWRfdXNlcnMoKQoKICAgICMgQ2hlY2sgaWYgdGhlIGVudGVyZWQgdXNlcm5hbWUgZXhpc3RzIGluIHRoZSBsaXN0IG9mIHVzZXJzCiAgICBpZiB1c2VybmFtZSBpbiB1c2VyczoKICAgICAgICAjIENoZWNrIGlmIHRoZSB1c2VybmFtZSBpcyBleHBpcmVkCiAgICAgICAgZXhwaXJlZF9kYXRlID0gdXNlcnNbdXNlcm5hbWVdLmdldCgiZXhwaXJlZCIpCiAgICAgICAgaWYgZXhwaXJlZF9kYXRlOgogICAgICAgICAgICBleHBpcmVkX2RhdGUgPSBkYXRldGltZS5zdHJwdGltZShleHBpcmVkX2RhdGUsICIlWS0lbS0lZCIpCiAgICAgICAgICAgIGlmIGV4cGlyZWRfZGF0ZSA8IGRhdGV0aW1lLm5vdygpOgogICAgICAgICAgICAgICAgcHJpbnQoZiJ7cmVkfVVzZXJuYW1lIFN1ZGFoIEV4cGlyZWQhe3doaXRlfSIpCiAgICAgICAgICAgICAgICBsb2dpbigpCiAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICBwcmludChmIntncmVlbn1Vc2VybmFtZSBEaXRlbXVrYW4uLi57d2hpdGV9IikKICAgICAgICAgICAgICAgIGtleSgpICAjIE9wZW4gdGhlIGV4dGVybmFsIFVSTAogICAgZWxzZToKICAgICAgICBwcmludChmIntyZWR9VXNlcm5hbWUgVGlkYWsgRGl0ZW11a2FuLi4ue3doaXRlfSIpCiAgICAgICAgbG9naW4oKSAgIyBQcm9tcHQgZm9yIHVzZXJuYW1lIGFnYWluCgpkZWYgbG9nKCk6CiAgICAiIiJMb2cgZnVuY3Rpb24gdG8gdmFsaWRhdGUgdG9rZW4iIiIKICAgIHVzZXJfdG9rZW4gPSBpbnB1dChmIntibHVlfU1hc3VrYW4gVG9rZW4ge3doaXRlfTogIikKICAgIAogICAgY2hlY2tfa2V5ID0gZidodHRwczovL3JlZGlyZWN0LWFwaS53b3JrLmluay90b2tlblZhbGlkL3t1c2VyX3Rva2VufScKICAgIHRyeToKICAgICAgICBwID0gcmVxdWVzdHMuZ2V0KGNoZWNrX2tleSkKICAgICAgICBwLnJhaXNlX2Zvcl9zdGF0dXMoKQogICAgICAgIGcgPSBwLmpzb24oKQogICAgICAgIGhhc2kgPSBnWyJ2YWxpZCJdCiAgICAgICAgaWYgaGFzaToKICAgICAgICAgICAgcHJpbnQoZiJ7Z3JlZW59VG9rZW4gRGl0ZW11a2FuLi4uIikKICAgICAgICAgICAgdGltZS5zbGVlcCgxKQogICAgICAgIGVsc2U6CiAgICAgICAgICAgIHByaW50KGYie3JlZH1Ub2tlbiBUaWRhayBEaXRlbXVrYW4uLi4iKQogICAgICAgICAgICBsb2coKSAgIyBBc2sgZm9yIHRva2VuIGFnYWluCiAgICBleGNlcHQgcmVxdWVzdHMuUmVxdWVzdEV4Y2VwdGlvbiBhcyBlOgogICAgICAgIHByaW50KGYiRXJyb3IgdmFsaWRhdGluZyB0b2tlbjoge2V9IikKICAgICAgICBsb2coKSAgIyBBc2sgZm9yIHRva2VuIGFnYWluCiAgICAgICAKbG9naW4oKQpsb2coKQpkZWYgY291bnRkb3duVGltZXIoc3RhcnRfbWludXRlLCBzdGFydF9zZWNvbmQpOgogICAgdG90YWxfc2Vjb25kID0gc3RhcnRfbWludXRlICogNjAgKyBzdGFydF9zZWNvbmQKICAgIHdoaWxlIHRvdGFsX3NlY29uZDoKICAgICAgICBtaW5zLCBzZWNzID0gZGl2bW9kKHRvdGFsX3NlY29uZCwgNjApCiAgICAgICAgdGltZS5zbGVlcCgxKQogICAgICAgIHRvdGFsX3NlY29uZCAtPSAxCiAgICBwcmludCgiIiJcMzNbMDszNW09PT09PT09PT09PT09PT09PT09PT09PT09PSIiIikKCgojIENvbmZpZwpzeXN0ZW0oImNsZWFyIikKCnRyeToKICBfX2ltcG9ydF9fKCdyZXF1ZXN0cycpCmV4Y2VwdCBNb2R1bGVOb3RGb3VuZEVycm9yOgogIG9zLnN5c3RlbSAoJ3BpcDMgaW5zdGFsbCByZXF1ZXN0cycpCmZpbmFsbHk6CiAgaW1wb3J0IHJlcXVlc3RzCgp0cnk6CiAgX19pbXBvcnRfXygnYnM0JykKZXhjZXB0IE1vZHVsZU5vdEZvdW5kRXJyb3I6CiAgb3Muc3lzdGVtICgicGlwMyBpbnN0YWxsIGJzNCIpCmZpbmFsbHk6CiAgZnJvbSBiczQgaW1wb3J0IEJlYXV0aWZ1bFNvdXAgYXMgcGFyc2VyCgoKbG9nbyA9IGYiXG57eWVsbG93fVsxLl0ge3JlZH3ilIDilIDilIDilIDilrYge3doaXRlfToge3doaXRlfVVQIFRPIDEgSlVUQVxue3llbGxvd31bMi5dIHtyZWR94pSA4pSA4pSA4pSA4pa2IHt3aGl0ZX06IHt3aGl0ZX1VUCBUTyA4MDAgUklCVVxue3llbGxvd31bMy5dIHtyZWR94pSA4pSA4pSA4pSA4pa2IHt3aGl0ZX06IHt3aGl0ZX1VUCBUTyA1MDAgUklCVVxue3llbGxvd31bNC5dIHtyZWR94pSA4pSA4pSA4pSA4pa2IHt3aGl0ZX06IHt3aGl0ZX1SRVZFUlNFIC01MDAgUklCVVxuIgoKCgoKCgoKZG9uZSA9IEZhbHNlCgoKZGVmIGFuaW1hdGUoKToKICAgIGZvciBjIGluIGl0ZXJ0b29scy5jeWNsZShbJ/CflpUnLCAn8J+YjiddKToKICAgICAgICBpZiBkb25lOgogICAgICAgICAgICBicmVhawogICAgICAgIHN5cy5zdGRvdXQud3JpdGUoJ1xybG9hZGluZyAnICsgYykKICAgICAgICBzeXMuc3Rkb3V0LmZsdXNoKCkKICAgICAgICB0aW1lLnNsZWVwKDAuOSkKCgoKCgp0eHQgPSAiVUIgQlVTU0lEIgpiYW5uZXIgPSBweWZpZ2xldC5maWdsZXRfZm9ybWF0KHR4dCwgZm9udD0ic2xhbnQiLCBqdXN0aWZ5PSJjZW50ZXIiKQoKCgpwcmludChiYW5uZXIpCgoKCmF1dGggPSBpbnB1dChmIlwwMzNbMTszMzs0MW3igKJcMDMzWzE7MzdbSW5wdXQgWC1BdXRob3JpemF0aW9uIENvZGVcMDMzWzE7MzNt4oCiXDAzM1swbVwwMzNbIikKCnJlY29yZCA9IFt7J0tleSc6IHsnc291cmNlQ2l0eSc6ICdCS0wnLCAnZGVzdGluYXRpb25DaXR5JzogJ1NCWScsICdyb3V0ZVBhc3NlZCc6IFsnU0JZJywgJ0JLTCddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDQwfSx7J0tleSc6IHsnc291cmNlQ2l0eSc6ICdTQlknLCAnZGVzdGluYXRpb25DaXR5JzogJ1NNRycsICdyb3V0ZVBhc3NlZCc6IFsnU01HJywgJ1NCWSddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDYwfSx7J0tleSc6IHsnc291cmNlQ2l0eSc6ICdCS0wnLCAnZGVzdGluYXRpb25DaXR5JzogJ1NNRycsICdyb3V0ZVBhc3NlZCc6IFsnU01HJywgJ0JLTCddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDIwfSx7J0tleSc6IHsnc291cmNlQ2l0eSc6ICdTTUcnLCAnZGVzdGluYXRpb25DaXR5JzogJ0NCTicsICdyb3V0ZVBhc3NlZCc6IFsnQ0JOJywgJ1NNRyddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDYwfSx7J0tleSc6IHsnc291cmNlQ2l0eSc6ICdTQlknLCAnZGVzdGluYXRpb25DaXR5JzogJ0NCTicsICdyb3V0ZVBhc3NlZCc6IFsnQ0JOJywgJ1NCWSddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDEzfSx7J0tleSc6IHsnc291cmNlQ2l0eSc6ICdCS0wnLCAnZGVzdGluYXRpb25DaXR5JzogJ0NCTicsICdyb3V0ZVBhc3NlZCc6IFsnQ0JOJywgJ0JLTCddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDV9LHsnS2V5Jzogeydzb3VyY2VDaXR5JzogJ0NCTicsICdkZXN0aW5hdGlvbkNpdHknOiAnSktUJywgJ3JvdXRlUGFzc2VkJzogWydKS1QnLCAnQ0JOJ10sICdhY3Rpdml0eVJld2FyZHMnOiBOb25lfSwgJ1ZhbHVlJzogNDV9LHsnS2V5Jzogeydzb3VyY2VDaXR5JzogJ1NNRycsICdkZXN0aW5hdGlvbkNpdHknOiAnSktUJywgJ3JvdXRlUGFzc2VkJzogWydKS1QnLCAnU01HJ10sICdhY3Rpdml0eVJld2FyZHMnOiBOb25lfSwgJ1ZhbHVlJzogOX0seydLZXknOiB7J3NvdXJjZUNpdHknOiAnU0JZJywgJ2Rlc3RpbmF0aW9uQ2l0eSc6ICdKS1QnLCAncm91dGVQYXNzZWQnOiBbJ0pLVCcsICdTQlknXSwgJ2FjdGl2aXR5UmV3YXJkcyc6IE5vbmV9LCAnVmFsdWUnOiA1fSx7J0tleSc6IHsnc291cmNlQ2l0eSc6ICdKS1QnLCAnZGVzdGluYXRpb25DaXR5JzogJ0JLTCcsICdyb3V0ZVBhc3NlZCc6IFsnQktMJywgJ0pLVCddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDZ9LHsnS2V5Jzogeydzb3VyY2VDaXR5JzogJ0pLVCcsICdkZXN0aW5hdGlvbkNpdHknOiAnUF9NZXJhaycsICdyb3V0ZVBhc3NlZCc6IFsnUF9NZXJhaycsICdKS1QnXSwgJ2FjdGl2aXR5UmV3YXJkcyc6IE5vbmV9LCAnVmFsdWUnOiA0NX0seydLZXknOiB7J3NvdXJjZUNpdHknOiAnQ0JOJywgJ2Rlc3RpbmF0aW9uQ2l0eSc6ICdQX01lcmFrJywgJ3JvdXRlUGFzc2VkJzogWydQX01lcmFrJywgJ0NCTiddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDl9LHsnS2V5Jzogeydzb3VyY2VDaXR5JzogJ1NNRycsICdkZXN0aW5hdGlvbkNpdHknOiAnUF9NZXJhaycsICdyb3V0ZVBhc3NlZCc6IFsnUF9NZXJhaycsICdTTUcnXSwgJ2FjdGl2aXR5UmV3YXJkcyc6IE5vbmV9LCAnVmFsdWUnOiA1fSx7J0tleSc6IHsnc291cmNlQ2l0eSc6ICdTQlknLCAnZGVzdGluYXRpb25DaXR5JzogJ1BfTWVyYWsnLCAncm91dGVQYXNzZWQnOiBbJ1BfTWVyYWsnLCAnU0JZJ10sICdhY3Rpdml0eVJld2FyZHMnOiBOb25lfSwgJ1ZhbHVlJzogNn0seydLZXknOiB7J3NvdXJjZUNpdHknOiAnQktMJywgJ2Rlc3RpbmF0aW9uQ2l0eSc6ICdQX01lcmFrJywgJ3JvdXRlUGFzc2VkJzogWydQX01lcmFrJywgJ0JLTCddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDZ9LHsnS2V5Jzogeydzb3VyY2VDaXR5JzogJ1BfTWVyYWsnLCAnZGVzdGluYXRpb25DaXR5JzogJ1BfQmFrYXVoZW5pJywgJ3JvdXRlUGFzc2VkJzogWydQX0Jha2F1aGVuaScsICdQX01lcmFrJ10sICdhY3Rpdml0eVJld2FyZHMnOiBOb25lfSwgJ1ZhbHVlJzogNX0sIHsnS2V5Jzogeydzb3VyY2VDaXR5JzogJ0pLVCcsICdkZXN0aW5hdGlvbkNpdHknOiAnUF9CYWthdWhlbmknLCAncm91dGVQYXNzZWQnOiBbJ1BfQmFrYXVoZW5pJywgJ0pLVCddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDF9LHsnS2V5Jzogeydzb3VyY2VDaXR5JzogJ0NCTicsICdkZXN0aW5hdGlvbkNpdHknOiAnUF9CYWthdWhlbmknLCAncm91dGVQYXNzZWQnOiBbJ1BfQmFrYXVoZW5pJywgJ0NCTiddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDF9LHsnS2V5Jzogeydzb3VyY2VDaXR5JzogJ1NNRycsICdkZXN0aW5hdGlvbkNpdHknOiAnUF9CYWthdWhlbmknLCAncm91dGVQYXNzZWQnOiBbJ1BfQmFrYXVoZW5pJywgJ1NNRyddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDB9LHsnS2V5Jzogeydzb3VyY2VDaXR5JzogJ1NCWScsICdkZXN0aW5hdGlvbkNpdHknOiAnUF9CYWthdWhlbmknLCAncm91dGVQYXNzZWQnOiBbJ1BfQmFrYXVoZW5pJywgJ1NCWSddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDB9LHsnS2V5Jzogeydzb3VyY2VDaXR5JzogJ0JLTCcsICdkZXN0aW5hdGlvbkNpdHknOiAnUF9CYWthdWhlbmknLCAncm91dGVQYXNzZWQnOiBbJ1BfQmFrYXVoZW5pJywgJ0JLTCddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDB9LHsnS2V5Jzogeydzb3VyY2VDaXR5JzogJ1BfTWVyYWsnLCAnZGVzdGluYXRpb25DaXR5JzogJ0xQRycsICdyb3V0ZVBhc3NlZCc6IFsnTFBHJywgJ1BfTWVyYWsnXSwgJ2FjdGl2aXR5UmV3YXJkcyc6IE5vbmV9LCAnVmFsdWUnOiA0fSx7J0tleSc6IHsnc291cmNlQ2l0eSc6ICdKS1QnLCAnZGVzdGluYXRpb25DaXR5JzogJ0xQRycsICdyb3V0ZVBhc3NlZCc6IFsnTFBHJywgJ0pLVCddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDZ9LHsnS2V5Jzogeydzb3VyY2VDaXR5JzogJ0NCTicsICdkZXN0aW5hdGlvbkNpdHknOiAnTFBHJywgJ3JvdXRlUGFzc2VkJzogWydMUEcnLCAnQ0JOJ10sICdhY3Rpdml0eVJld2FyZHMnOiBOb25lfSwgJ1ZhbHVlJzogMX0seydLZXknOiB7J3NvdXJjZUNpdHknOiAnU01HJywgJ2Rlc3RpbmF0aW9uQ2l0eSc6ICdMUEcnLCAncm91dGVQYXNzZWQnOiBbJ0xQRycsICdTTUcnXSwgJ2FjdGl2aXR5UmV3YXJkcyc6IE5vbmV9LCAnVmFsdWUnOiAxfSx7J0tleSc6IHsnc291cmNlQ2l0eSc6ICdTQlknLCAnZGVzdGluYXRpb25DaXR5JzogJ0xQRycsICdyb3V0ZVBhc3NlZCc6IFsnTFBHJywgJ1NCWSddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDF9LHsnS2V5Jzogeydzb3VyY2VDaXR5JzogJ0JLTCcsICdkZXN0aW5hdGlvbkNpdHknOiAnTFBHJywgJ3JvdXRlUGFzc2VkJzogWydMUEcnLCAnQktMJ10sICdhY3Rpdml0eVJld2FyZHMnOiBOb25lfSwgJ1ZhbHVlJzogMX0seydLZXknOiB7J3NvdXJjZUNpdHknOiAnTFBHJywgJ2Rlc3RpbmF0aW9uQ2l0eSc6ICdQTEInLCAncm91dGVQYXNzZWQnOiBbJ0xQRycsICdTQlknXSwgJ2FjdGl2aXR5UmV3YXJkcyc6IE5vbmV9LCAnVmFsdWUnOiA1NX0seydLZXknOiB7J3NvdXJjZUNpdHknOiAnUF9CYWthdWhlbmknLCAnZGVzdGluYXRpb25DaXR5JzogJ1BMQicsICdyb3V0ZVBhc3NlZCc6IFsnUExCJywgJ1BfQmFrYXVoZW5pJ10sICdhY3Rpdml0eVJld2FyZHMnOiBOb25lfSwgJ1ZhbHVlJzogMTF9LHsnS2V5Jzogeydzb3VyY2VDaXR5JzogJ1BfTWVyYWsnLCAnZGVzdGluYXRpb25DaXR5JzogJ1BMQicsICdyb3V0ZVBhc3NlZCc6IFsnUExCJywgJ1BfTWVyYWsnXSwgJ2FjdGl2aXR5UmV3YXJkcyc6IE5vbmV9LCAnVmFsdWUnOiA2fSx7J0tleSc6IHsnc291cmNlQ2l0eSc6ICdKS1QnLCAnZGVzdGluYXRpb25DaXR5JzogJ1BMQicsICdyb3V0ZVBhc3NlZCc6IFsnUExCJywgJ0pLVCddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDR9LHsnS2V5Jzogeydzb3VyY2VDaXR5JzogJ0NCTicsICdkZXN0aW5hdGlvbkNpdHknOiAnUExCJywgJ3JvdXRlUGFzc2VkJzogWydQTEInLCAnQ0JOJ10sICdhY3Rpdml0eVJld2FyZHMnOiBOb25lfSwgJ1ZhbHVlJzogNn0seydLZXknOiB7J3NvdXJjZUNpdHknOiAnU01HJywgJ2Rlc3RpbmF0aW9uQ2l0eSc6ICdQTEInLCAncm91dGVQYXNzZWQnOiBbJ1BMQicsICdTTUcnXSwgJ2FjdGl2aXR5UmV3YXJkcyc6IE5vbmV9LCAnVmFsdWUnOiA2fSx7J0tleSc6IHsnc291cmNlQ2l0eSc6ICdTQlknLCAnZGVzdGluYXRpb25DaXR5JzogJ1BMQicsICdyb3V0ZVBhc3NlZCc6IFsnUExCJywgJ1NCWSddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDZ9LHsnS2V5Jzogeydzb3VyY2VDaXR5JzogJ0JLTCcsICdkZXN0aW5hdGlvbkNpdHknOiAnUExCJywgJ3JvdXRlUGFzc2VkJzogWydQTEInLCAnQktMJ10sICdhY3Rpdml0eVJld2FyZHMnOiBOb25lfSwgJ1ZhbHVlJzogNn0seydLZXknOiB7J3NvdXJjZUNpdHknOiAnUExCJywgJ2Rlc3RpbmF0aW9uQ2l0eSc6ICdKTUInLCAncm91dGVQYXNzZWQnOiBbJ0pNQicsICdQTEInXSwgJ2FjdGl2aXR5UmV3YXJkcyc6IE5vbmV9LCAnVmFsdWUnOiA2MH0seydLZXknOiB7J3NvdXJjZUNpdHknOiAnTFBHJywgJ2Rlc3RpbmF0aW9uQ2l0eSc6ICdKTUInLCAncm91dGVQYXNzZWQnOiBbJ0pNQicsICdMUEcnXSwgJ2FjdGl2aXR5UmV3YXJkcyc6IE5vbmV9LCAnVmFsdWUnOiAxMH0seydLZXknOiB7J3NvdXJjZUNpdHknOiAnUF9CYWthdWhlbmknLCAnZGVzdGluYXRpb25DaXR5JzogJ0pNQicsICdyb3V0ZVBhc3NlZCc6IFsnSk1CJywgJ1BfQmFrYXVoZW5pJ10sICdhY3Rpdml0eVJld2FyZHMnOiBOb25lfSwgJ1ZhbHVlJzogNX0seydLZXknOiB7J3NvdXJjZUNpdHknOiAnUF9NZXJhaycsICdkZXN0aW5hdGlvbkNpdHknOiAnSk1CJywgJ3JvdXRlUGFzc2VkJzogWydKTUInLCAnUF9NZXJhayddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDZ9LHsnS2V5Jzogeydzb3VyY2VDaXR5JzogJ0pLVCcsICdkZXN0aW5hdGlvbkNpdHknOiAnSk1CJywgJ3JvdXRlUGFzc2VkJzogWydKTUInLCAnSktUJ10sICdhY3Rpdml0eVJld2FyZHMnOiBOb25lfSwgJ1ZhbHVlJzogNn0seydLZXknOiB7J3NvdXJjZUNpdHknOiAnQ0JOJywgJ2Rlc3RpbmF0aW9uQ2l0eSc6ICdKTUInLCAncm91dGVQYXNzZWQnOiBbJ0pNQicsICdDQk4nXSwgJ2FjdGl2aXR5UmV3YXJkcyc6IE5vbmV9LCAnVmFsdWUnOiA2fSx7J0tleSc6IHsnc291cmNlQ2l0eSc6ICdTTUcnLCAnZGVzdGluYXRpb25DaXR5JzogJ0pNQicsICdyb3V0ZVBhc3NlZCc6IFsnSk1CJywgJ1NNRyddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDZ9LHsnS2V5Jzogeydzb3VyY2VDaXR5JzogJ1NCWScsICdkZXN0aW5hdGlvbkNpdHknOiAnSk1CJywgJ3JvdXRlUGFzc2VkJzogWydKTUInLCAnU0JZJ10sICdhY3Rpdml0eVJld2FyZHMnOiBOb25lfSwgJ1ZhbHVlJzogMX0seydLZXknOiB7J3NvdXJjZUNpdHknOiAnQktMJywgJ2Rlc3RpbmF0aW9uQ2l0eSc6ICdKTUInLCAncm91dGVQYXNzZWQnOiBbJ0pNQicsICdCS0wnXSwgJ2FjdGl2aXR5UmV3YXJkcyc6IE5vbmV9LCAnVmFsdWUnOiAxfSx7J0tleSc6IHsnc291cmNlQ2l0eSc6ICdKTUInLCAnZGVzdGluYXRpb25DaXR5JzogJ1BCUicsICdyb3V0ZVBhc3NlZCc6IFsnUEJSJywgJ0pNQiddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDYwfSx7J0tleSc6IHsnc291cmNlQ2l0eSc6ICdQTEInLCAnZGVzdGluYXRpb25DaXR5JzogJ1BCUicsICdyb3V0ZVBhc3NlZCc6IFsnUEJSJywgJ1BMQiddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDEyfSx7J0tleSc6IHsnc291cmNlQ2l0eSc6ICdMUEcnLCAnZGVzdGluYXRpb25DaXR5JzogJ1BCUicsICdyb3V0ZVBhc3NlZCc6IFsnUEJSJywgJ0xQRyddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDZ9LHsnS2V5Jzogeydzb3VyY2VDaXR5JzogJ1BfQmFrYXVoZW5pJywgJ2Rlc3RpbmF0aW9uQ2l0eSc6ICdQQlInLCAncm91dGVQYXNzZWQnOiBbJ1BCUicsICdQX0Jha2F1aGVuaSddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDR9LHsnS2V5Jzogeydzb3VyY2VDaXR5JzogJ1BfTWVyYWsnLCAnZGVzdGluYXRpb25DaXR5JzogJ1BCUicsICdyb3V0ZVBhc3NlZCc6IFsnUEJSJywgJ1BfTWVyYWsnXSwgJ2FjdGl2aXR5UmV3YXJkcyc6IE5vbmV9LCAnVmFsdWUnOiA2fSx7J0tleSc6IHsnc291cmNlQ2l0eSc6ICdKS1QnLCAnZGVzdGluYXRpb25DaXR5JzogJ1BCUicsICdyb3V0ZVBhc3NlZCc6IFsnUEJSJywgJ0pLVCddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDZ9LHsnS2V5Jzogeydzb3VyY2VDaXR5JzogJ0NCTicsICdkZXN0aW5hdGlvbkNpdHknOiAnUEJSJywgJ3JvdXRlUGFzc2VkJzogWydQQlInLCAnQ0JOJ10sICdhY3Rpdml0eVJld2FyZHMnOiBOb25lfSwgJ1ZhbHVlJzogNn0seydLZXknOiB7J3NvdXJjZUNpdHknOiAnU01HJywgJ2Rlc3RpbmF0aW9uQ2l0eSc6ICdQQlInLCAncm91dGVQYXNzZWQnOiBbJ1BCUicsICdTTUcnXSwgJ2FjdGl2aXR5UmV3YXJkcyc6IE5vbmV9LCAnVmFsdWUnOiA2fSx7J0tleSc6IHsnc291cmNlQ2l0eSc6ICdTQlknLCAnZGVzdGluYXRpb25DaXR5JzogJ1BCUicsICdyb3V0ZVBhc3NlZCc6IFsnUEJSJywgJ1NCWSddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDZ9LHsnS2V5Jzogeydzb3VyY2VDaXR5JzogJ0JLTCcsICdkZXN0aW5hdGlvbkNpdHknOiAnUEJSJywgJ3JvdXRlUGFzc2VkJzogWydQQlInLCAnQktMJ10sICdhY3Rpdml0eVJld2FyZHMnOiBOb25lfSwgJ1ZhbHVlJzogMX0seyJLZXkiOnsic291cmNlQ2l0eSI6IlBCUiIsImRlc3RpbmF0aW9uQ2l0eSI6IkJLVCIsInJvdXRlUGFzc2VkIjpbIkJLVCIsIlBCUiJdLCJhY3Rpdml0eVJld2FyZHMiOk5vbmV9LCJWYWx1ZSI6NTB9LHsiS2V5Ijp7InNvdXJjZUNpdHkiOiJQQlIiLCJkZXN0aW5hdGlvbkNpdHkiOiJQREciLCJyb3V0ZVBhc3NlZCI6WyJQREciLCJCS1QiLCJQQlIiXSwiYWN0aXZpdHlSZXdhcmRzIjpOb25lfSwiVmFsdWUiOjl9LHsiS2V5Ijp7InNvdXJjZUNpdHkiOiJCS1QiLCJkZXN0aW5hdGlvbkNpdHkiOiJQREciLCJyb3V0ZVBhc3NlZCI6WyJQREciLCJCS1QiXSwiYWN0aXZpdHlSZXdhcmRzIjpOb25lfSwiVmFsdWUiOjUwfSxdCgoKCgoKaGVhZGVycyA9IHsnVXNlci1BZ2VudCc6ICdVbml0eUVuZ2luZS1Vbml0eTsgVmVyc2lvbjogMjAxOC40LjI2ZjEnLCdYLVJlcG9ydEVycm9yQXNTdWNjZXNzJzogJ3RydWUnLCdYLVBsYXlGYWJTREsnOiAnVW5pdHlTREstMi4yMC4xNzA0MTEnLCdYLUF1dGhvcml6YXRpb24nOiAnJywnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLCdDb250ZW50LUxlbmd0aCc6ICcyMjMnLCdIb3N0JzogJzRhZTkucGxheWZhYmFwaS5jb20nfQoKZGVmIG14eHh4KCk6CiAgICAgICAgZGF0YSA9IGpzb24uZHVtcHMoeyJQbGF5RmFiSWQiOk5vbmUsIkluZm9SZXF1ZXN0UGFyYW1ldGVycyI6eyJHZXRVc2VyQWNjb3VudEluZm8iOlRydWUsIkdldFVzZXJJbnZlbnRvcnkiOlRydWUsIkdldFVzZXJWaXJ0dWFsQ3VycmVuY3kiOlRydWUsIkdldFVzZXJEYXRhIjpGYWxzZSwiVXNlckRhdGFLZXlzIjpOb25lLCJHZXRVc2VyUmVhZE9ubHlEYXRhIjpUcnVlLCJVc2VyUmVhZE9ubHlEYXRhS2V5cyI6Tm9uZSwiR2V0Q2hhcmFjdGVySW52ZW50b3JpZXMiOkZhbHNlLCJHZXRDaGFyYWN0ZXJMaXN0IjpGYWxzZSwiR2V0VGl0bGVEYXRhIjpUcnVlLCJUaXRsZURhdGFLZXlzIjpOb25lLCJHZXRQbGF5ZXJTdGF0aXN0aWNzIjpGYWxzZSwiUGxheWVyU3RhdGlzdGljTmFtZXMiOk5vbmV9fSkKICAgICAgICByZXNwb25zZSA9IHJlcXVlc3RzLnBvc3QoJ2h0dHBzOi8vNGFlOS5wbGF5ZmFiYXBpLmNvbS9DbGllbnQvR2V0UGxheWVyQ29tYmluZWRJbmZvJywgaGVhZGVycz1oZWFkZXJzLCBkYXRhPWRhdGEpLnRleHQKICAgICAgICBpZiByZXNwb25zZSAhPSAnJzoKICAgICAgICAgICAgICAgIHBhcnNlciA9IGpzb24ubG9hZHMocmVzcG9uc2UpCiAgICAgICAgICAgICAgICBpZiBwYXJzZXJbJ2NvZGUnXSA9PSA0MDE6CiAgICAgICAgICAgICAgICAgICAgICAgIHBhc3MKICAgICAgICAgICAgICAgIGVsaWYgcGFyc2VyWydjb2RlJ10gPT0gMjAwOgogICAgICAgICAgICAgICAgICAgICAgICBiYWNrZW5kX2RhdGEgPSBwYXJzZXJbJ2RhdGEnXQogICAgICAgICAgICAgICAgICAgICAgICBpZiAiYXBpRXJyb3IiIGluIHN0cihiYWNrZW5kX2RhdGEpOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhc3MKICAgICAgICAgICAgICAgICAgICAgICAgZWxzZToKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGF0ID0gYmFja2VuZF9kYXRhWydJbmZvUmVzdWx0UGF5bG9hZCddCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdWFuZz0gY2hhdFsnVXNlclZpcnR1YWxDdXJyZW5jeSddCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbW9uZXk9IHVhbmdbJ1JQJ10KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmZmY9IGNoYXRbJ0FjY291bnRJbmZvJ10KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB6eno9IGZmZlsnVGl0bGVJbmZvJ10KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3d3c9IHp6elsnVGl0bGVQbGF5ZXJBY2NvdW50J10KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzYWE9IHd3d1snSWQnXQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGdjYz0gY2hhdFsnQWNjb3VudEluZm8nXQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlkPSBnY2NbJ1RpdGxlSW5mbyddCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgeW91PSBpZFsnRGlzcGxheU5hbWUnXQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGtldGlrKGYie2dyZWVufS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0ge3doaXRlfUluZm8gQWt1bntncmVlbn0gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSIpICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGtldGlrKGYiICAgICAgICAgICAgICAgICAgIHt3aGl0ZX0gLSBUb3RhbCBNb25leSA6IHtncmVlbn17bW9uZXl9IikKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBrZXRpayhmIiAgICAgICAgICAgICAgICAgIHt3aGl0ZX0gLSBJRCBLYW11IDoge2dyZWVufXtzYWF9IikKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBrZXRpayhmIntncmVlbn0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIikKCgoKZGVmIGNyZWF0ZV9mZigpOgogICAgICAgIGdhbWVfZGF0YSA9ICd7IkZ1bmN0aW9uTmFtZSI6IlBsYXlDYXJlZXIiLCJGdW5jdGlvblBhcmFtZXRlciI6eyJjaXRpZXMiOlsiQktMIiwiU0JZIiwiU01HIiwiQ0JOIiwiSktUIiwiUF9NZXJhayIsIlBfQmFrYXVoZW5pIiwiTFBHIiwiUExCIiwiSk1CIiwiUEJSIiwiQktUIiwiUERHIl19LCJSZXZpc2lvblNlbGVjdGlvbiI6IkxpdmUiLCJTcGVjaWZpY1JldmlzaW9uIjpudWxsLCJHZW5lcmF0ZVBsYXlTdHJlYW1FdmVudCI6ZmFsc2V9JwogICAgICAgIHJlc3BvbnNlID0gcmVxdWVzdHMucG9zdCgnaHR0cHM6Ly80YWU5LnBsYXlmYWJhcGkuY29tL0NsaWVudC9FeGVjdXRlQ2xvdWRTY3JpcHQnLCBoZWFkZXJzPWhlYWRlcnMsIGRhdGE9Z2FtZV9kYXRhKS50ZXh0CiAgICAgICAgaWYgcmVzcG9uc2UgIT0gJyc6CiAgICAgICAgICAgICAgICBwYXJzZXIgPSBqc29uLmxvYWRzKHJlc3BvbnNlKQogICAgICAgICAgICAgICAgaWYgcGFyc2VyWydjb2RlJ10gPT0gNDAxOgogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gTm9uZQogICAgICAgICAgICAgICAgZWxpZiBwYXJzZXJbJ2NvZGUnXSA9PSAyMDA6CiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEgPSBwYXJzZXJbJ2RhdGEnXQogICAgICAgICAgICAgICAgICAgICAgICBpZiAiYXBpRXJyb3IiIGluIHN0cihkYXRhKToKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gTm9uZQogICAgICAgICAgICAgICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhcnJlciA9IGRhdGFbJ0Z1bmN0aW9uUmVzdWx0J11bJ2NhcmVlclNlc3Npb24nXQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjYXJyZXIKICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgcmV0dXJuIE5vbmUKCmRlZiBza2lwX21sbCh0b2tlbik6CiAgICAgICAgZGF0YSA9IGpzb24uZHVtcHMoeyJGdW5jdGlvbk5hbWUiOiJGYXJlUGF5bWVudCIsIkZ1bmN0aW9uUGFyYW1ldGVyIjp7InJlY29yZHMiOnJlY29yZCwiYm9udXMiOlRydWUsImNhcmVlclRva2VuIjp0b2tlbiwiYWN0aXZpdHlSZXdhcmRUb2tlbiI6IntcInJld2FyZHNcIjpbXX0ifSwiUmV2aXNpb25TZWxlY3Rpb24iOiJMaXZlIiwiU3BlY2lmaWNSZXZpc2lvbiI6Tm9uZSwiR2VuZXJhdGVQbGF5U3RyZWFtRXZlbnQiOkZhbHNlfSkKICAgICAgICByZXNwb25zZSA9IHJlcXVlc3RzLnBvc3QoJ2h0dHBzOi8vNGFlOS5wbGF5ZmFiYXBpLmNvbS9DbGllbnQvRXhlY3V0ZUNsb3VkU2NyaXB0JywgaGVhZGVycz1oZWFkZXJzLCBkYXRhPWRhdGEpLnRleHQKICAgICAgICBpZiByZXNwb25zZSAhPSAnJzoKICAgICAgICAgICAgICAgIHBhcnNlciA9IGpzb24ubG9hZHMocmVzcG9uc2UpCiAgICAgICAgICAgICAgICBpZiBwYXJzZXJbJ2NvZGUnXSA9PSA0MDE6CiAgICAgICAgICAgICAgICAgICAgICAgIHBhc3MKICAgICAgICAgICAgICAgIGVsaWYgcGFyc2VyWydjb2RlJ10gPT0gMjAwOgogICAgICAgICAgICAgICAgICAgICAgICBiYWNrZW5kX2RhdGEgPSBwYXJzZXJbJ2RhdGEnXQogICAgICAgICAgICAgICAgICAgICAgICBpZiAiYXBpRXJyb3IiIGluIHN0cihiYWNrZW5kX2RhdGEpOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhc3MKICAgICAgICAgICAgICAgICAgICAgICAgZWxzZToKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsb2dzID0gYmFja2VuZF9kYXRhWydGdW5jdGlvblJlc3VsdCddCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCmRlZiBwYXNzX21lbWVrKCk6CiAgICAgICAgY2FycmVyID0gY3JlYXRlX2ZmKCkKICAgICAgICBpZiBjYXJyZXIgIT0gTm9uZToKICAgICAgICAgICAgICAgIHRva2VuID0gY2FycmVyWyd0b2tlbiddCiAgICAgICAgICAgICAgICBza2lwX21sbCh0b2tlbikKICAgICAgICAgICAgICAgIG14eHh4KCkKCmhlYWRlcnNbJ1gtQXV0aG9yaXphdGlvbiddID0gYXV0aAoKZGVmIHJlbmFtZSgpOgogICAgICAgIGRhdGEgPSBqc29uLmR1bXBzKHsiRGlzcGxheU5hbWUiOiJUb3AgVXAgQnkgQXRhYVhEIn0pCiAgICAgICAgcmVzcG9uc2UgPSByZXF1ZXN0cy5wb3N0KCdodHRwczovLzRhZTkucGxheWZhYmFwaS5jb20vQ2xpZW50L1VwZGF0ZVVzZXJUaXRsZURpc3BsYXlOYW1lJywgaGVhZGVycz1oZWFkZXJzLCBkYXRhPWRhdGEpLnRleHQKICAgICAgICBpZiByZXNwb25zZSAhPSAnJzoKICAgICAgICAgICAgICAgIHBhcnNlciA9IGpzb24ubG9hZHMocmVzcG9uc2UpCiAgICAgICAgICAgICAgICBpZiBwYXJzZXJbJ2NvZGUnXSA9PSA0MDE6CiAgICAgICAgICAgICAgICAgICAgICAgIHBhc3MKICAgICAgICAgICAgICAgIGVsaWYgcGFyc2VyWydjb2RlJ10gPT0gMjAwOgogICAgICAgICAgICAgICAgICAgICAgICBiYWNrZW5kX2RhdGEgPSBwYXJzZXJbJ2RhdGEnXQogICAgICAgICAgICAgICAgICAgICAgICBpZiAiYXBpRXJyb3IiIGluIHN0cihiYWNrZW5kX2RhdGEpOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhc3MKICAgICAgICAgICAgICAgICAgICAgICAgZWxzZToKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGF0ID0gYmFja2VuZF9kYXRhWydEaXNwbGF5TmFtZSddCgojNWp1dGEKcmVjb3JkZCA9IFt7J0tleSc6IHsnc291cmNlQ2l0eSc6ICdCS0wnLCAnZGVzdGluYXRpb25DaXR5JzogJ1NCWScsICdyb3V0ZVBhc3NlZCc6IFsnU0JZJywgJ0JLTCddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDk5OX0seydLZXknOiB7J3NvdXJjZUNpdHknOiAnU0JZJywgJ2Rlc3RpbmF0aW9uQ2l0eSc6ICdTTUcnLCAncm91dGVQYXNzZWQnOiBbJ1NNRycsICdTQlknXSwgJ2FjdGl2aXR5UmV3YXJkcyc6IE5vbmV9LCAnVmFsdWUnOiA5OTl9LHsnS2V5Jzogeydzb3VyY2VDaXR5JzogJ0JLTCcsICdkZXN0aW5hdGlvbkNpdHknOiAnU01HJywgJ3JvdXRlUGFzc2VkJzogWydTTUcnLCAnQktMJ10sICdhY3Rpdml0eVJld2FyZHMnOiBOb25lfSwgJ1ZhbHVlJzogOTk5fSx7J0tleSc6IHsnc291cmNlQ2l0eSc6ICdTTUcnLCAnZGVzdGluYXRpb25DaXR5JzogJ0NCTicsICdyb3V0ZVBhc3NlZCc6IFsnQ0JOJywgJ1NNRyddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDk5OX0seydLZXknOiB7J3NvdXJjZUNpdHknOiAnU0JZJywgJ2Rlc3RpbmF0aW9uQ2l0eSc6ICdDQk4nLCAncm91dGVQYXNzZWQnOiBbJ0NCTicsICdTQlknXSwgJ2FjdGl2aXR5UmV3YXJkcyc6IE5vbmV9LCAnVmFsdWUnOiA5OTl9LHsnS2V5Jzogeydzb3VyY2VDaXR5JzogJ0JLTCcsICdkZXN0aW5hdGlvbkNpdHknOiAnQ0JOJywgJ3JvdXRlUGFzc2VkJzogWydDQk4nLCAnQktMJ10sICdhY3Rpdml0eVJld2FyZHMnOiBOb25lfSwgJ1ZhbHVlJzogOTk5fSx7J0tleSc6IHsnc291cmNlQ2l0eSc6ICdDQk4nLCAnZGVzdGluYXRpb25DaXR5JzogJ0pLVCcsICdyb3V0ZVBhc3NlZCc6IFsnSktUJywgJ0NCTiddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDk5OX0seydLZXknOiB7J3NvdXJjZUNpdHknOiAnU01HJywgJ2Rlc3RpbmF0aW9uQ2l0eSc6ICdKS1QnLCAncm91dGVQYXNzZWQnOiBbJ0pLVCcsICdTTUcnXSwgJ2FjdGl2aXR5UmV3YXJkcyc6IE5vbmV9LCAnVmFsdWUnOiA5OTl9LHsnS2V5Jzogeydzb3VyY2VDaXR5JzogJ1NCWScsICdkZXN0aW5hdGlvbkNpdHknOiAnSktUJywgJ3JvdXRlUGFzc2VkJzogWydKS1QnLCAnU0JZJ10sICdhY3Rpdml0eVJld2FyZHMnOiBOb25lfSwgJ1ZhbHVlJzogOTk5fSx7J0tleSc6IHsnc291cmNlQ2l0eSc6ICdKS1QnLCAnZGVzdGluYXRpb25DaXR5JzogJ0JLTCcsICdyb3V0ZVBhc3NlZCc6IFsnQktMJywgJ0pLVCddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDk5OX0seydLZXknOiB7J3NvdXJjZUNpdHknOiAnSktUJywgJ2Rlc3RpbmF0aW9uQ2l0eSc6ICdQX01lcmFrJywgJ3JvdXRlUGFzc2VkJzogWydQX01lcmFrJywgJ0pLVCddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDk5OX0seydLZXknOiB7J3NvdXJjZUNpdHknOiAnQ0JOJywgJ2Rlc3RpbmF0aW9uQ2l0eSc6ICdQX01lcmFrJywgJ3JvdXRlUGFzc2VkJzogWydQX01lcmFrJywgJ0NCTiddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDk5OX0seydLZXknOiB7J3NvdXJjZUNpdHknOiAnU01HJywgJ2Rlc3RpbmF0aW9uQ2l0eSc6ICdQX01lcmFrJywgJ3JvdXRlUGFzc2VkJzogWydQX01lcmFrJywgJ1NNRyddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDk5OX0seydLZXknOiB7J3NvdXJjZUNpdHknOiAnU0JZJywgJ2Rlc3RpbmF0aW9uQ2l0eSc6ICdQX01lcmFrJywgJ3JvdXRlUGFzc2VkJzogWydQX01lcmFrJywgJ1NCWSddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDk5OX0seydLZXknOiB7J3NvdXJjZUNpdHknOiAnQktMJywgJ2Rlc3RpbmF0aW9uQ2l0eSc6ICdQX01lcmFrJywgJ3JvdXRlUGFzc2VkJzogWydQX01lcmFrJywgJ0JLTCddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDk5OX0seydLZXknOiB7J3NvdXJjZUNpdHknOiAnUF9NZXJhaycsICdkZXN0aW5hdGlvbkNpdHknOiAnUF9CYWthdWhlbmknLCAncm91dGVQYXNzZWQnOiBbJ1BfQmFrYXVoZW5pJywgJ1BfTWVyYWsnXSwgJ2FjdGl2aXR5UmV3YXJkcyc6IE5vbmV9LCAnVmFsdWUnOiA5OTl9LCB7J0tleSc6IHsnc291cmNlQ2l0eSc6ICdKS1QnLCAnZGVzdGluYXRpb25DaXR5JzogJ1BfQmFrYXVoZW5pJywgJ3JvdXRlUGFzc2VkJzogWydQX0Jha2F1aGVuaScsICdKS1QnXSwgJ2FjdGl2aXR5UmV3YXJkcyc6IE5vbmV9LCAnVmFsdWUnOiA5OTl9LHsnS2V5Jzogeydzb3VyY2VDaXR5JzogJ0NCTicsICdkZXN0aW5hdGlvbkNpdHknOiAnUF9CYWthdWhlbmknLCAncm91dGVQYXNzZWQnOiBbJ1BfQmFrYXVoZW5pJywgJ0NCTiddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDk5OX0seydLZXknOiB7J3NvdXJjZUNpdHknOiAnU01HJywgJ2Rlc3RpbmF0aW9uQ2l0eSc6ICdQX0Jha2F1aGVuaScsICdyb3V0ZVBhc3NlZCc6IFsnUF9CYWthdWhlbmknLCAnU01HJ10sICdhY3Rpdml0eVJld2FyZHMnOiBOb25lfSwgJ1ZhbHVlJzogOTk5fSx7J0tleSc6IHsnc291cmNlQ2l0eSc6ICdTQlknLCAnZGVzdGluYXRpb25DaXR5JzogJ1BfQmFrYXVoZW5pJywgJ3JvdXRlUGFzc2VkJzogWydQX0Jha2F1aGVuaScsICdTQlknXSwgJ2FjdGl2aXR5UmV3YXJkcyc6IE5vbmV9LCAnVmFsdWUnOiA5OTl9LHsnS2V5Jzogeydzb3VyY2VDaXR5JzogJ0JLTCcsICdkZXN0aW5hdGlvbkNpdHknOiAnUF9CYWthdWhlbmknLCAncm91dGVQYXNzZWQnOiBbJ1BfQmFrYXVoZW5pJywgJ0JLTCddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDk5OX0seydLZXknOiB7J3NvdXJjZUNpdHknOiAnUF9NZXJhaycsICdkZXN0aW5hdGlvbkNpdHknOiAnTFBHJywgJ3JvdXRlUGFzc2VkJzogWydMUEcnLCAnUF9NZXJhayddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDk5OX0seydLZXknOiB7J3NvdXJjZUNpdHknOiAnSktUJywgJ2Rlc3RpbmF0aW9uQ2l0eSc6ICdMUEcnLCAncm91dGVQYXNzZWQnOiBbJ0xQRycsICdKS1QnXSwgJ2FjdGl2aXR5UmV3YXJkcyc6IE5vbmV9LCAnVmFsdWUnOiA5OTl9LHsnS2V5Jzogeydzb3VyY2VDaXR5JzogJ0NCTicsICdkZXN0aW5hdGlvbkNpdHknOiAnTFBHJywgJ3JvdXRlUGFzc2VkJzogWydMUEcnLCAnQ0JOJ10sICdhY3Rpdml0eVJld2FyZHMnOiBOb25lfSwgJ1ZhbHVlJzogOTk5fSx7J0tleSc6IHsnc291cmNlQ2l0eSc6ICdTTUcnLCAnZGVzdGluYXRpb25DaXR5JzogJ0xQRycsICdyb3V0ZVBhc3NlZCc6IFsnTFBHJywgJ1NNRyddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDk5OX0seydLZXknOiB7J3NvdXJjZUNpdHknOiAnU0JZJywgJ2Rlc3RpbmF0aW9uQ2l0eSc6ICdMUEcnLCAncm91dGVQYXNzZWQnOiBbJ0xQRycsICdTQlknXSwgJ2FjdGl2aXR5UmV3YXJkcyc6IE5vbmV9LCAnVmFsdWUnOiA5OTl9LHsnS2V5Jzogeydzb3VyY2VDaXR5JzogJ0JLTCcsICdkZXN0aW5hdGlvbkNpdHknOiAnTFBHJywgJ3JvdXRlUGFzc2VkJzogWydMUEcnLCAnQktMJ10sICdhY3Rpdml0eVJld2FyZHMnOiBOb25lfSwgJ1ZhbHVlJzogOTk5fSx7J0tleSc6IHsnc291cmNlQ2l0eSc6ICdMUEcnLCAnZGVzdGluYXRpb25DaXR5JzogJ1BMQicsICdyb3V0ZVBhc3NlZCc6IFsnTFBHJywgJ1NCWSddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDk5OX0seydLZXknOiB7J3NvdXJjZUNpdHknOiAnUF9CYWthdWhlbmknLCAnZGVzdGluYXRpb25DaXR5JzogJ1BMQicsICdyb3V0ZVBhc3NlZCc6IFsnUExCJywgJ1BfQmFrYXVoZW5pJ10sICdhY3Rpdml0eVJld2FyZHMnOiBOb25lfSwgJ1ZhbHVlJzogOTk5fSx7J0tleSc6IHsnc291cmNlQ2l0eSc6ICdQX01lcmFrJywgJ2Rlc3RpbmF0aW9uQ2l0eSc6ICdQTEInLCAncm91dGVQYXNzZWQnOiBbJ1BMQicsICdQX01lcmFrJ10sICdhY3Rpdml0eVJld2FyZHMnOiBOb25lfSwgJ1ZhbHVlJzogOTk5fSx7J0tleSc6IHsnc291cmNlQ2l0eSc6ICdKS1QnLCAnZGVzdGluYXRpb25DaXR5JzogJ1BMQicsICdyb3V0ZVBhc3NlZCc6IFsnUExCJywgJ0pLVCddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDk5OX0seydLZXknOiB7J3NvdXJjZUNpdHknOiAnQ0JOJywgJ2Rlc3RpbmF0aW9uQ2l0eSc6ICdQTEInLCAncm91dGVQYXNzZWQnOiBbJ1BMQicsICdDQk4nXSwgJ2FjdGl2aXR5UmV3YXJkcyc6IE5vbmV9LCAnVmFsdWUnOiA5OTl9LHsnS2V5Jzogeydzb3VyY2VDaXR5JzogJ1NNRycsICdkZXN0aW5hdGlvbkNpdHknOiAnUExCJywgJ3JvdXRlUGFzc2VkJzogWydQTEInLCAnU01HJ10sICdhY3Rpdml0eVJld2FyZHMnOiBOb25lfSwgJ1ZhbHVlJzogOTk5fSx7J0tleSc6IHsnc291cmNlQ2l0eSc6ICdTQlknLCAnZGVzdGluYXRpb25DaXR5JzogJ1BMQicsICdyb3V0ZVBhc3NlZCc6IFsnUExCJywgJ1NCWSddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDk5OX0seydLZXknOiB7J3NvdXJjZUNpdHknOiAnQktMJywgJ2Rlc3RpbmF0aW9uQ2l0eSc6ICdQTEInLCAncm91dGVQYXNzZWQnOiBbJ1BMQicsICdCS0wnXSwgJ2FjdGl2aXR5UmV3YXJkcyc6IE5vbmV9LCAnVmFsdWUnOiA5OTl9LHsnS2V5Jzogeydzb3VyY2VDaXR5JzogJ1BMQicsICdkZXN0aW5hdGlvbkNpdHknOiAnSk1CJywgJ3JvdXRlUGFzc2VkJzogWydKTUInLCAnUExCJ10sICdhY3Rpdml0eVJld2FyZHMnOiBOb25lfSwgJ1ZhbHVlJzogOTk5fSx7J0tleSc6IHsnc291cmNlQ2l0eSc6ICdMUEcnLCAnZGVzdGluYXRpb25DaXR5JzogJ0pNQicsICdyb3V0ZVBhc3NlZCc6IFsnSk1CJywgJ0xQRyddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDk5OX0seydLZXknOiB7J3NvdXJjZUNpdHknOiAnUF9CYWthdWhlbmknLCAnZGVzdGluYXRpb25DaXR5JzogJ0pNQicsICdyb3V0ZVBhc3NlZCc6IFsnSk1CJywgJ1BfQmFrYXVoZW5pJ10sICdhY3Rpdml0eVJld2FyZHMnOiBOb25lfSwgJ1ZhbHVlJzogOTk5fSx7J0tleSc6IHsnc291cmNlQ2l0eSc6ICdQX01lcmFrJywgJ2Rlc3RpbmF0aW9uQ2l0eSc6ICdKTUInLCAncm91dGVQYXNzZWQnOiBbJ0pNQicsICdQX01lcmFrJ10sICdhY3Rpdml0eVJld2FyZHMnOiBOb25lfSwgJ1ZhbHVlJzogOTk5fSx7J0tleSc6IHsnc291cmNlQ2l0eSc6ICdKS1QnLCAnZGVzdGluYXRpb25DaXR5JzogJ0pNQicsICdyb3V0ZVBhc3NlZCc6IFsnSk1CJywgJ0pLVCddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDk5OX0seydLZXknOiB7J3NvdXJjZUNpdHknOiAnQ0JOJywgJ2Rlc3RpbmF0aW9uQ2l0eSc6ICdKTUInLCAncm91dGVQYXNzZWQnOiBbJ0pNQicsICdDQk4nXSwgJ2FjdGl2aXR5UmV3YXJkcyc6IE5vbmV9LCAnVmFsdWUnOiA5OTl9LHsnS2V5Jzogeydzb3VyY2VDaXR5JzogJ1NNRycsICdkZXN0aW5hdGlvbkNpdHknOiAnSk1CJywgJ3JvdXRlUGFzc2VkJzogWydKTUInLCAnU01HJ10sICdhY3Rpdml0eVJld2FyZHMnOiBOb25lfSwgJ1ZhbHVlJzogOTk5fSx7J0tleSc6IHsnc291cmNlQ2l0eSc6ICdTQlknLCAnZGVzdGluYXRpb25DaXR5JzogJ0pNQicsICdyb3V0ZVBhc3NlZCc6IFsnSk1CJywgJ1NCWSddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDk5OX0seydLZXknOiB7J3NvdXJjZUNpdHknOiAnQktMJywgJ2Rlc3RpbmF0aW9uQ2l0eSc6ICdKTUInLCAncm91dGVQYXNzZWQnOiBbJ0pNQicsICdCS0wnXSwgJ2FjdGl2aXR5UmV3YXJkcyc6IE5vbmV9LCAnVmFsdWUnOiA5OTl9LHsnS2V5Jzogeydzb3VyY2VDaXR5JzogJ0pNQicsICdkZXN0aW5hdGlvbkNpdHknOiAnUEJSJywgJ3JvdXRlUGFzc2VkJzogWydQQlInLCAnSk1CJ10sICdhY3Rpdml0eVJld2FyZHMnOiBOb25lfSwgJ1ZhbHVlJzogOTk5fSx7J0tleSc6IHsnc291cmNlQ2l0eSc6ICdQTEInLCAnZGVzdGluYXRpb25DaXR5JzogJ1BCUicsICdyb3V0ZVBhc3NlZCc6IFsnUEJSJywgJ1BMQiddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDk5OX0seydLZXknOiB7J3NvdXJjZUNpdHknOiAnTFBHJywgJ2Rlc3RpbmF0aW9uQ2l0eSc6ICdQQlInLCAncm91dGVQYXNzZWQnOiBbJ1BCUicsICdMUEcnXSwgJ2FjdGl2aXR5UmV3YXJkcyc6IE5vbmV9LCAnVmFsdWUnOiA5OTl9LHsnS2V5Jzogeydzb3VyY2VDaXR5JzogJ1BfQmFrYXVoZW5pJywgJ2Rlc3RpbmF0aW9uQ2l0eSc6ICdQQlInLCAncm91dGVQYXNzZWQnOiBbJ1BCUicsICdQX0Jha2F1aGVuaSddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDk5OX0seydLZXknOiB7J3NvdXJjZUNpdHknOiAnUF9NZXJhaycsICdkZXN0aW5hdGlvbkNpdHknOiAnUEJSJywgJ3JvdXRlUGFzc2VkJzogWydQQlInLCAnUF9NZXJhayddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDk5OX0seydLZXknOiB7J3NvdXJjZUNpdHknOiAnSktUJywgJ2Rlc3RpbmF0aW9uQ2l0eSc6ICdQQlInLCAncm91dGVQYXNzZWQnOiBbJ1BCUicsICdKS1QnXSwgJ2FjdGl2aXR5UmV3YXJkcyc6IE5vbmV9LCAnVmFsdWUnOiA5OTl9LHsnS2V5Jzogeydzb3VyY2VDaXR5JzogJ0NCTicsICdkZXN0aW5hdGlvbkNpdHknOiAnUEJSJywgJ3JvdXRlUGFzc2VkJzogWydQQlInLCAnQ0JOJ10sICdhY3Rpdml0eVJld2FyZHMnOiBOb25lfSwgJ1ZhbHVlJzogOTk5fSx7J0tleSc6IHsnc291cmNlQ2l0eSc6ICdTTUcnLCAnZGVzdGluYXRpb25DaXR5JzogJ1BCUicsICdyb3V0ZVBhc3NlZCc6IFsnUEJSJywgJ1NNRyddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDk5OX0seydLZXknOiB7J3NvdXJjZUNpdHknOiAnU0JZJywgJ2Rlc3RpbmF0aW9uQ2l0eSc6ICdQQlInLCAncm91dGVQYXNzZWQnOiBbJ1BCUicsICdTQlknXSwgJ2FjdGl2aXR5UmV3YXJkcyc6IE5vbmV9LCAnVmFsdWUnOiA5OTl9LHsnS2V5Jzogeydzb3VyY2VDaXR5JzogJ0JLTCcsICdkZXN0aW5hdGlvbkNpdHknOiAnUEJSJywgJ3JvdXRlUGFzc2VkJzogWydQQlInLCAnQktMJ10sICdhY3Rpdml0eVJld2FyZHMnOiBOb25lfSwgJ1ZhbHVlJzogOTk5fSxdCmhlYWRlcnMgPSB7J1VzZXItQWdlbnQnOiAnVW5pdHlFbmdpbmUtVW5pdHk7IFZlcnNpb246IDIwMTguNC4yNmYxJywnWC1SZXBvcnRFcnJvckFzU3VjY2Vzcyc6ICd0cnVlJywnWC1QbGF5RmFiU0RLJzogJ1VuaXR5U0RLLTIuMjAuMTcwNDExJywnWC1BdXRob3JpemF0aW9uJzogJycsJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJywnQ29udGVudC1MZW5ndGgnOiAnMjIzJywnSG9zdCc6ICc0YWU5LnBsYXlmYWJhcGkuY29tJ30KCmRlZiBwYXNzX2xvcHl1KCk6CiAgICAgICAgY2FycmVyID0gY3JlYXRlX2ZmKCkKICAgICAgICBpZiBjYXJyZXIgIT0gTm9uZToKICAgICAgICAgICAgICAgIHRva2VuID0gY2FycmVyWyd0b2tlbiddCiAgICAgICAgICAgICAgICBza2lwX21sbCh0b2tlbikKICAgICAgICAgICAgICAgIG14eHh4KCkKCmhlYWRlcnNbJ1gtQXV0aG9yaXphdGlvbiddID0gYXV0aAoKZGVmIHJlbmFtZSgpOgogICAgICAgIGRhdGEgPSBqc29uLmR1bXBzKHsiRGlzcGxheU5hbWUiOiJUb3AgVXAgQnkgQXRhYVhEIn0pCiAgICAgICAgcmVzcG9uc2UgPSByZXF1ZXN0cy5wb3N0KCdodHRwczovLzRhZTkucGxheWZhYmFwaS5jb20vQ2xpZW50L1VwZGF0ZVVzZXJUaXRsZURpc3BsYXlOYW1lJywgaGVhZGVycz1oZWFkZXJzLCBkYXRhPWRhdGEpLnRleHQKICAgICAgICBpZiByZXNwb25zZSAhPSAnJzoKICAgICAgICAgICAgICAgIHBhcnNlciA9IGpzb24ubG9hZHMocmVzcG9uc2UpCiAgICAgICAgICAgICAgICBpZiBwYXJzZXJbJ2NvZGUnXSA9PSA0MDE6CiAgICAgICAgICAgICAgICAgICAgICAgIHBhc3MKICAgICAgICAgICAgICAgIGVsaWYgcGFyc2VyWydjb2RlJ10gPT0gMjAwOgogICAgICAgICAgICAgICAgICAgICAgICBiYWNrZW5kX2RhdGEgPSBwYXJzZXJbJ2RhdGEnXQogICAgICAgICAgICAgICAgICAgICAgICBpZiAiYXBpRXJyb3IiIGluIHN0cihiYWNrZW5kX2RhdGEpOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhc3MKICAgICAgICAgICAgICAgICAgICAgICAgZWxzZToKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGF0ID0gYmFja2VuZF9kYXRhWydEaXNwbGF5TmFtZSddCgojMmp1dGEKcmVjb3JkZCA9IFt7J0tleSc6IHsnc291cmNlQ2l0eSc6ICdCS0wnLCAnZGVzdGluYXRpb25DaXR5JzogJ1NCWScsICdyb3V0ZVBhc3NlZCc6IFsnU0JZJywgJ0JLTCddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDQwfSx7J0tleSc6IHsnc291cmNlQ2l0eSc6ICdTQlknLCAnZGVzdGluYXRpb25DaXR5JzogJ1NNRycsICdyb3V0ZVBhc3NlZCc6IFsnU01HJywgJ1NCWSddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDYwfSx7J0tleSc6IHsnc291cmNlQ2l0eSc6ICdCS0wnLCAnZGVzdGluYXRpb25DaXR5JzogJ1NNRycsICdyb3V0ZVBhc3NlZCc6IFsnU01HJywgJ0JLTCddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDEyfSx7J0tleSc6IHsnc291cmNlQ2l0eSc6ICdTTUcnLCAnZGVzdGluYXRpb25DaXR5JzogJ0NCTicsICdyb3V0ZVBhc3NlZCc6IFsnQ0JOJywgJ1NNRyddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDUwfSx7J0tleSc6IHsnc291cmNlQ2l0eSc6ICdTQlknLCAnZGVzdGluYXRpb25DaXR5JzogJ0NCTicsICdyb3V0ZVBhc3NlZCc6IFsnQ0JOJywgJ1NCWSddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDEwfSx7J0tleSc6IHsnc291cmNlQ2l0eSc6ICdCS0wnLCAnZGVzdGluYXRpb25DaXR5JzogJ0NCTicsICdyb3V0ZVBhc3NlZCc6IFsnQ0JOJywgJ0JLTCddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDV9LHsnS2V5Jzogeydzb3VyY2VDaXR5JzogJ0NCTicsICdkZXN0aW5hdGlvbkNpdHknOiAnSktUJywgJ3JvdXRlUGFzc2VkJzogWydKS1QnLCAnQ0JOJ10sICdhY3Rpdml0eVJld2FyZHMnOiBOb25lfSwgJ1ZhbHVlJzogNDV9LHsnS2V5Jzogeydzb3VyY2VDaXR5JzogJ1NNRycsICdkZXN0aW5hdGlvbkNpdHknOiAnSktUJywgJ3JvdXRlUGFzc2VkJzogWydKS1QnLCAnU01HJ10sICdhY3Rpdml0eVJld2FyZHMnOiBOb25lfSwgJ1ZhbHVlJzogOX0seydLZXknOiB7J3NvdXJjZUNpdHknOiAnU0JZJywgJ2Rlc3RpbmF0aW9uQ2l0eSc6ICdKS1QnLCAncm91dGVQYXNzZWQnOiBbJ0pLVCcsICdTQlknXSwgJ2FjdGl2aXR5UmV3YXJkcyc6IE5vbmV9LCAnVmFsdWUnOiA1fSx7J0tleSc6IHsnc291cmNlQ2l0eSc6ICdKS1QnLCAnZGVzdGluYXRpb25DaXR5JzogJ0JLTCcsICdyb3V0ZVBhc3NlZCc6IFsnQktMJywgJ0pLVCddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDN9LHsnS2V5Jzogeydzb3VyY2VDaXR5JzogJ0pLVCcsICdkZXN0aW5hdGlvbkNpdHknOiAnUF9NZXJhaycsICdyb3V0ZVBhc3NlZCc6IFsnUF9NZXJhaycsICdKS1QnXSwgJ2FjdGl2aXR5UmV3YXJkcyc6IE5vbmV9LCAnVmFsdWUnOiA0NX0seydLZXknOiB7J3NvdXJjZUNpdHknOiAnQ0JOJywgJ2Rlc3RpbmF0aW9uQ2l0eSc6ICdQX01lcmFrJywgJ3JvdXRlUGFzc2VkJzogWydQX01lcmFrJywgJ0NCTiddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDl9LHsnS2V5Jzogeydzb3VyY2VDaXR5JzogJ1NNRycsICdkZXN0aW5hdGlvbkNpdHknOiAnUF9NZXJhaycsICdyb3V0ZVBhc3NlZCc6IFsnUF9NZXJhaycsICdTTUcnXSwgJ2FjdGl2aXR5UmV3YXJkcyc6IE5vbmV9LCAnVmFsdWUnOiA1fSx7J0tleSc6IHsnc291cmNlQ2l0eSc6ICdTQlknLCAnZGVzdGluYXRpb25DaXR5JzogJ1BfTWVyYWsnLCAncm91dGVQYXNzZWQnOiBbJ1BfTWVyYWsnLCAnU0JZJ10sICdhY3Rpdml0eVJld2FyZHMnOiBOb25lfSwgJ1ZhbHVlJzogM30seydLZXknOiB7J3NvdXJjZUNpdHknOiAnQktMJywgJ2Rlc3RpbmF0aW9uQ2l0eSc6ICdQX01lcmFrJywgJ3JvdXRlUGFzc2VkJzogWydQX01lcmFrJywgJ0JLTCddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDJ9LHsnS2V5Jzogeydzb3VyY2VDaXR5JzogJ1BfTWVyYWsnLCAnZGVzdGluYXRpb25DaXR5JzogJ1BfQmFrYXVoZW5pJywgJ3JvdXRlUGFzc2VkJzogWydQX0Jha2F1aGVuaScsICdQX01lcmFrJ10sICdhY3Rpdml0eVJld2FyZHMnOiBOb25lfSwgJ1ZhbHVlJzogNX0sIHsnS2V5Jzogeydzb3VyY2VDaXR5JzogJ0pLVCcsICdkZXN0aW5hdGlvbkNpdHknOiAnUF9CYWthdWhlbmknLCAncm91dGVQYXNzZWQnOiBbJ1BfQmFrYXVoZW5pJywgJ0pLVCddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDF9LHsnS2V5Jzogeydzb3VyY2VDaXR5JzogJ0NCTicsICdkZXN0aW5hdGlvbkNpdHknOiAnUF9CYWthdWhlbmknLCAncm91dGVQYXNzZWQnOiBbJ1BfQmFrYXVoZW5pJywgJ0NCTiddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDF9LHsnS2V5Jzogeydzb3VyY2VDaXR5JzogJ1NNRycsICdkZXN0aW5hdGlvbkNpdHknOiAnUF9CYWthdWhlbmknLCAncm91dGVQYXNzZWQnOiBbJ1BfQmFrYXVoZW5pJywgJ1NNRyddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDB9LHsnS2V5Jzogeydzb3VyY2VDaXR5JzogJ1NCWScsICdkZXN0aW5hdGlvbkNpdHknOiAnUF9CYWthdWhlbmknLCAncm91dGVQYXNzZWQnOiBbJ1BfQmFrYXVoZW5pJywgJ1NCWSddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDB9LHsnS2V5Jzogeydzb3VyY2VDaXR5JzogJ0JLTCcsICdkZXN0aW5hdGlvbkNpdHknOiAnUF9CYWthdWhlbmknLCAncm91dGVQYXNzZWQnOiBbJ1BfQmFrYXVoZW5pJywgJ0JLTCddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDB9LHsnS2V5Jzogeydzb3VyY2VDaXR5JzogJ1BfTWVyYWsnLCAnZGVzdGluYXRpb25DaXR5JzogJ0xQRycsICdyb3V0ZVBhc3NlZCc6IFsnTFBHJywgJ1BfTWVyYWsnXSwgJ2FjdGl2aXR5UmV3YXJkcyc6IE5vbmV9LCAnVmFsdWUnOiA0fSx7J0tleSc6IHsnc291cmNlQ2l0eSc6ICdKS1QnLCAnZGVzdGluYXRpb25DaXR5JzogJ0xQRycsICdyb3V0ZVBhc3NlZCc6IFsnTFBHJywgJ0pLVCddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDJ9LHsnS2V5Jzogeydzb3VyY2VDaXR5JzogJ0NCTicsICdkZXN0aW5hdGlvbkNpdHknOiAnTFBHJywgJ3JvdXRlUGFzc2VkJzogWydMUEcnLCAnQ0JOJ10sICdhY3Rpdml0eVJld2FyZHMnOiBOb25lfSwgJ1ZhbHVlJzogMX0seydLZXknOiB7J3NvdXJjZUNpdHknOiAnU01HJywgJ2Rlc3RpbmF0aW9uQ2l0eSc6ICdMUEcnLCAncm91dGVQYXNzZWQnOiBbJ0xQRycsICdTTUcnXSwgJ2FjdGl2aXR5UmV3YXJkcyc6IE5vbmV9LCAnVmFsdWUnOiAxfSx7J0tleSc6IHsnc291cmNlQ2l0eSc6ICdTQlknLCAnZGVzdGluYXRpb25DaXR5JzogJ0xQRycsICdyb3V0ZVBhc3NlZCc6IFsnTFBHJywgJ1NCWSddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDF9LHsnS2V5Jzogeydzb3VyY2VDaXR5JzogJ0JLTCcsICdkZXN0aW5hdGlvbkNpdHknOiAnTFBHJywgJ3JvdXRlUGFzc2VkJzogWydMUEcnLCAnQktMJ10sICdhY3Rpdml0eVJld2FyZHMnOiBOb25lfSwgJ1ZhbHVlJzogMX0seydLZXknOiB7J3NvdXJjZUNpdHknOiAnTFBHJywgJ2Rlc3RpbmF0aW9uQ2l0eSc6ICdQTEInLCAncm91dGVQYXNzZWQnOiBbJ0xQRycsICdTQlknXSwgJ2FjdGl2aXR5UmV3YXJkcyc6IE5vbmV9LCAnVmFsdWUnOiA1NX0seydLZXknOiB7J3NvdXJjZUNpdHknOiAnUF9CYWthdWhlbmknLCAnZGVzdGluYXRpb25DaXR5JzogJ1BMQicsICdyb3V0ZVBhc3NlZCc6IFsnUExCJywgJ1BfQmFrYXVoZW5pJ10sICdhY3Rpdml0eVJld2FyZHMnOiBOb25lfSwgJ1ZhbHVlJzogMTF9LHsnS2V5Jzogeydzb3VyY2VDaXR5JzogJ1BfTWVyYWsnLCAnZGVzdGluYXRpb25DaXR5JzogJ1BMQicsICdyb3V0ZVBhc3NlZCc6IFsnUExCJywgJ1BfTWVyYWsnXSwgJ2FjdGl2aXR5UmV3YXJkcyc6IE5vbmV9LCAnVmFsdWUnOiA2fSx7J0tleSc6IHsnc291cmNlQ2l0eSc6ICdKS1QnLCAnZGVzdGluYXRpb25DaXR5JzogJ1BMQicsICdyb3V0ZVBhc3NlZCc6IFsnUExCJywgJ0pLVCddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDR9LHsnS2V5Jzogeydzb3VyY2VDaXR5JzogJ0NCTicsICdkZXN0aW5hdGlvbkNpdHknOiAnUExCJywgJ3JvdXRlUGFzc2VkJzogWydQTEInLCAnQ0JOJ10sICdhY3Rpdml0eVJld2FyZHMnOiBOb25lfSwgJ1ZhbHVlJzogM30seydLZXknOiB7J3NvdXJjZUNpdHknOiAnU01HJywgJ2Rlc3RpbmF0aW9uQ2l0eSc6ICdQTEInLCAncm91dGVQYXNzZWQnOiBbJ1BMQicsICdTTUcnXSwgJ2FjdGl2aXR5UmV3YXJkcyc6IE5vbmV9LCAnVmFsdWUnOiAyfSx7J0tleSc6IHsnc291cmNlQ2l0eSc6ICdTQlknLCAnZGVzdGluYXRpb25DaXR5JzogJ1BMQicsICdyb3V0ZVBhc3NlZCc6IFsnUExCJywgJ1NCWSddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDJ9LHsnS2V5Jzogeydzb3VyY2VDaXR5JzogJ0JLTCcsICdkZXN0aW5hdGlvbkNpdHknOiAnUExCJywgJ3JvdXRlUGFzc2VkJzogWydQTEInLCAnQktMJ10sICdhY3Rpdml0eVJld2FyZHMnOiBOb25lfSwgJ1ZhbHVlJzogMn0seydLZXknOiB7J3NvdXJjZUNpdHknOiAnUExCJywgJ2Rlc3RpbmF0aW9uQ2l0eSc6ICdKTUInLCAncm91dGVQYXNzZWQnOiBbJ0pNQicsICdQTEInXSwgJ2FjdGl2aXR5UmV3YXJkcyc6IE5vbmV9LCAnVmFsdWUnOiA1MH0seydLZXknOiB7J3NvdXJjZUNpdHknOiAnTFBHJywgJ2Rlc3RpbmF0aW9uQ2l0eSc6ICdKTUInLCAncm91dGVQYXNzZWQnOiBbJ0pNQicsICdMUEcnXSwgJ2FjdGl2aXR5UmV3YXJkcyc6IE5vbmV9LCAnVmFsdWUnOiAxMH0seydLZXknOiB7J3NvdXJjZUNpdHknOiAnUF9CYWthdWhlbmknLCAnZGVzdGluYXRpb25DaXR5JzogJ0pNQicsICdyb3V0ZVBhc3NlZCc6IFsnSk1CJywgJ1BfQmFrYXVoZW5pJ10sICdhY3Rpdml0eVJld2FyZHMnOiBOb25lfSwgJ1ZhbHVlJzogNX0seydLZXknOiB7J3NvdXJjZUNpdHknOiAnUF9NZXJhaycsICdkZXN0aW5hdGlvbkNpdHknOiAnSk1CJywgJ3JvdXRlUGFzc2VkJzogWydKTUInLCAnUF9NZXJhayddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDN9LHsnS2V5Jzogeydzb3VyY2VDaXR5JzogJ0pLVCcsICdkZXN0aW5hdGlvbkNpdHknOiAnSk1CJywgJ3JvdXRlUGFzc2VkJzogWydKTUInLCAnSktUJ10sICdhY3Rpdml0eVJld2FyZHMnOiBOb25lfSwgJ1ZhbHVlJzogM30seydLZXknOiB7J3NvdXJjZUNpdHknOiAnQ0JOJywgJ2Rlc3RpbmF0aW9uQ2l0eSc6ICdKTUInLCAncm91dGVQYXNzZWQnOiBbJ0pNQicsICdDQk4nXSwgJ2FjdGl2aXR5UmV3YXJkcyc6IE5vbmV9LCAnVmFsdWUnOiAyfSx7J0tleSc6IHsnc291cmNlQ2l0eSc6ICdTTUcnLCAnZGVzdGluYXRpb25DaXR5JzogJ0pNQicsICdyb3V0ZVBhc3NlZCc6IFsnSk1CJywgJ1NNRyddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDJ9LHsnS2V5Jzogeydzb3VyY2VDaXR5JzogJ1NCWScsICdkZXN0aW5hdGlvbkNpdHknOiAnSk1CJywgJ3JvdXRlUGFzc2VkJzogWydKTUInLCAnU0JZJ10sICdhY3Rpdml0eVJld2FyZHMnOiBOb25lfSwgJ1ZhbHVlJzogMX0seydLZXknOiB7J3NvdXJjZUNpdHknOiAnQktMJywgJ2Rlc3RpbmF0aW9uQ2l0eSc6ICdKTUInLCAncm91dGVQYXNzZWQnOiBbJ0pNQicsICdCS0wnXSwgJ2FjdGl2aXR5UmV3YXJkcyc6IE5vbmV9LCAnVmFsdWUnOiAxfSx7J0tleSc6IHsnc291cmNlQ2l0eSc6ICdKTUInLCAnZGVzdGluYXRpb25DaXR5JzogJ1BCUicsICdyb3V0ZVBhc3NlZCc6IFsnUEJSJywgJ0pNQiddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDYwfSx7J0tleSc6IHsnc291cmNlQ2l0eSc6ICdQTEInLCAnZGVzdGluYXRpb25DaXR5JzogJ1BCUicsICdyb3V0ZVBhc3NlZCc6IFsnUEJSJywgJ1BMQiddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDEyfSx7J0tleSc6IHsnc291cmNlQ2l0eSc6ICdMUEcnLCAnZGVzdGluYXRpb25DaXR5JzogJ1BCUicsICdyb3V0ZVBhc3NlZCc6IFsnUEJSJywgJ0xQRyddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDZ9LHsnS2V5Jzogeydzb3VyY2VDaXR5JzogJ1BfQmFrYXVoZW5pJywgJ2Rlc3RpbmF0aW9uQ2l0eSc6ICdQQlInLCAncm91dGVQYXNzZWQnOiBbJ1BCUicsICdQX0Jha2F1aGVuaSddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDR9LHsnS2V5Jzogeydzb3VyY2VDaXR5JzogJ1BfTWVyYWsnLCAnZGVzdGluYXRpb25DaXR5JzogJ1BCUicsICdyb3V0ZVBhc3NlZCc6IFsnUEJSJywgJ1BfTWVyYWsnXSwgJ2FjdGl2aXR5UmV3YXJkcyc6IE5vbmV9LCAnVmFsdWUnOiAzfSx7J0tleSc6IHsnc291cmNlQ2l0eSc6ICdKS1QnLCAnZGVzdGluYXRpb25DaXR5JzogJ1BCUicsICdyb3V0ZVBhc3NlZCc6IFsnUEJSJywgJ0pLVCddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDJ9LHsnS2V5Jzogeydzb3VyY2VDaXR5JzogJ0NCTicsICdkZXN0aW5hdGlvbkNpdHknOiAnUEJSJywgJ3JvdXRlUGFzc2VkJzogWydQQlInLCAnQ0JOJ10sICdhY3Rpdml0eVJld2FyZHMnOiBOb25lfSwgJ1ZhbHVlJzogMn0seydLZXknOiB7J3NvdXJjZUNpdHknOiAnU01HJywgJ2Rlc3RpbmF0aW9uQ2l0eSc6ICdQQlInLCAncm91dGVQYXNzZWQnOiBbJ1BCUicsICdTTUcnXSwgJ2FjdGl2aXR5UmV3YXJkcyc6IE5vbmV9LCAnVmFsdWUnOiAyfSx7J0tleSc6IHsnc291cmNlQ2l0eSc6ICdTQlknLCAnZGVzdGluYXRpb25DaXR5JzogJ1BCUicsICdyb3V0ZVBhc3NlZCc6IFsnUEJSJywgJ1NCWSddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDJ9LHsnS2V5Jzogeydzb3VyY2VDaXR5JzogJ0JLTCcsICdkZXN0aW5hdGlvbkNpdHknOiAnUEJSJywgJ3JvdXRlUGFzc2VkJzogWydQQlInLCAnQktMJ10sICdhY3Rpdml0eVJld2FyZHMnOiBOb25lfSwgJ1ZhbHVlJzogMX0sXQpoZWFkZXJzID0geydVc2VyLUFnZW50JzogJ1VuaXR5RW5naW5lLVVuaXR5OyBWZXJzaW9uOiAyMDE4LjQuMjZmMScsJ1gtUmVwb3J0RXJyb3JBc1N1Y2Nlc3MnOiAndHJ1ZScsJ1gtUGxheUZhYlNESyc6ICdVbml0eVNESy0yLjIwLjE3MDQxMScsJ1gtQXV0aG9yaXphdGlvbic6ICcnLCdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsJ0NvbnRlbnQtTGVuZ3RoJzogJzIyMycsJ0hvc3QnOiAnNGFlOS5wbGF5ZmFiYXBpLmNvbSd9CgpkZWYgcGFzc19taXNzeXUoKToKICAgICAgICBjYXJyZXIgPSBjcmVhdGVfZmYoKQogICAgICAgIGlmIGNhcnJlciAhPSBOb25lOgogICAgICAgICAgICAgICAgdG9rZW4gPSBjYXJyZXJbJ3Rva2VuJ10KICAgICAgICAgICAgICAgIHNraXBfbWxsKHRva2VuKQogICAgICAgICAgICAgICAgbXh4eHgoKQoKaGVhZGVyc1snWC1BdXRob3JpemF0aW9uJ10gPSBhdXRoCgpkZWYgcmVuYW1lKCk6CiAgICAgICAgZGF0YSA9IGpzb24uZHVtcHMoeyJEaXNwbGF5TmFtZSI6IlRvcCBVcCBCeSBBdGFhWEQifSkKICAgICAgICByZXNwb25zZSA9IHJlcXVlc3RzLnBvc3QoJ2h0dHBzOi8vNGFlOS5wbGF5ZmFiYXBpLmNvbS9DbGllbnQvVXBkYXRlVXNlclRpdGxlRGlzcGxheU5hbWUnLCBoZWFkZXJzPWhlYWRlcnMsIGRhdGE9ZGF0YSkudGV4dAogICAgICAgIGlmIHJlc3BvbnNlICE9ICcnOgogICAgICAgICAgICAgICAgcGFyc2VyID0ganNvbi5sb2FkcyhyZXNwb25zZSkKICAgICAgICAgICAgICAgIGlmIHBhcnNlclsnY29kZSddID09IDQwMToKICAgICAgICAgICAgICAgICAgICAgICAgcGFzcwogICAgICAgICAgICAgICAgZWxpZiBwYXJzZXJbJ2NvZGUnXSA9PSAyMDA6CiAgICAgICAgICAgICAgICAgICAgICAgIGJhY2tlbmRfZGF0YSA9IHBhcnNlclsnZGF0YSddCiAgICAgICAgICAgICAgICAgICAgICAgIGlmICJhcGlFcnJvciIgaW4gc3RyKGJhY2tlbmRfZGF0YSk6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGFzcwogICAgICAgICAgICAgICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoYXQgPSBiYWNrZW5kX2RhdGFbJ0Rpc3BsYXlOYW1lJ10KCiMxanV0YQpyZWNvcmRkID0gW3snS2V5Jzogeydzb3VyY2VDaXR5JzogJ0JLTCcsICdkZXN0aW5hdGlvbkNpdHknOiAnU0JZJywgJ3JvdXRlUGFzc2VkJzogWydTQlknLCAnQktMJ10sICdhY3Rpdml0eVJld2FyZHMnOiBOb25lfSwgJ1ZhbHVlJzogNDB9LHsnS2V5Jzogeydzb3VyY2VDaXR5JzogJ1NCWScsICdkZXN0aW5hdGlvbkNpdHknOiAnU01HJywgJ3JvdXRlUGFzc2VkJzogWydTTUcnLCAnU0JZJ10sICdhY3Rpdml0eVJld2FyZHMnOiBOb25lfSwgJ1ZhbHVlJzogNjB9LHsnS2V5Jzogeydzb3VyY2VDaXR5JzogJ0JLTCcsICdkZXN0aW5hdGlvbkNpdHknOiAnU01HJywgJ3JvdXRlUGFzc2VkJzogWydTTUcnLCAnQktMJ10sICdhY3Rpdml0eVJld2FyZHMnOiBOb25lfSwgJ1ZhbHVlJzogMTJ9LHsnS2V5Jzogeydzb3VyY2VDaXR5JzogJ1NNRycsICdkZXN0aW5hdGlvbkNpdHknOiAnQ0JOJywgJ3JvdXRlUGFzc2VkJzogWydDQk4nLCAnU01HJ10sICdhY3Rpdml0eVJld2FyZHMnOiBOb25lfSwgJ1ZhbHVlJzogNTB9LHsnS2V5Jzogeydzb3VyY2VDaXR5JzogJ1NCWScsICdkZXN0aW5hdGlvbkNpdHknOiAnQ0JOJywgJ3JvdXRlUGFzc2VkJzogWydDQk4nLCAnU0JZJ10sICdhY3Rpdml0eVJld2FyZHMnOiBOb25lfSwgJ1ZhbHVlJzogMTB9LHsnS2V5Jzogeydzb3VyY2VDaXR5JzogJ0JLTCcsICdkZXN0aW5hdGlvbkNpdHknOiAnQ0JOJywgJ3JvdXRlUGFzc2VkJzogWydDQk4nLCAnQktMJ10sICdhY3Rpdml0eVJld2FyZHMnOiBOb25lfSwgJ1ZhbHVlJzogNX0seydLZXknOiB7J3NvdXJjZUNpdHknOiAnQ0JOJywgJ2Rlc3RpbmF0aW9uQ2l0eSc6ICdKS1QnLCAncm91dGVQYXNzZWQnOiBbJ0pLVCcsICdDQk4nXSwgJ2FjdGl2aXR5UmV3YXJkcyc6IE5vbmV9LCAnVmFsdWUnOiA0NX0seydLZXknOiB7J3NvdXJjZUNpdHknOiAnU01HJywgJ2Rlc3RpbmF0aW9uQ2l0eSc6ICdKS1QnLCAncm91dGVQYXNzZWQnOiBbJ0pLVCcsICdTTUcnXSwgJ2FjdGl2aXR5UmV3YXJkcyc6IE5vbmV9LCAnVmFsdWUnOiA5fSx7J0tleSc6IHsnc291cmNlQ2l0eSc6ICdTQlknLCAnZGVzdGluYXRpb25DaXR5JzogJ0pLVCcsICdyb3V0ZVBhc3NlZCc6IFsnSktUJywgJ1NCWSddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDV9LHsnS2V5Jzogeydzb3VyY2VDaXR5JzogJ0pLVCcsICdkZXN0aW5hdGlvbkNpdHknOiAnQktMJywgJ3JvdXRlUGFzc2VkJzogWydCS0wnLCAnSktUJ10sICdhY3Rpdml0eVJld2FyZHMnOiBOb25lfSwgJ1ZhbHVlJzogM30seydLZXknOiB7J3NvdXJjZUNpdHknOiAnSktUJywgJ2Rlc3RpbmF0aW9uQ2l0eSc6ICdQX01lcmFrJywgJ3JvdXRlUGFzc2VkJzogWydQX01lcmFrJywgJ0pLVCddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDQ1fSx7J0tleSc6IHsnc291cmNlQ2l0eSc6ICdDQk4nLCAnZGVzdGluYXRpb25DaXR5JzogJ1BfTWVyYWsnLCAncm91dGVQYXNzZWQnOiBbJ1BfTWVyYWsnLCAnQ0JOJ10sICdhY3Rpdml0eVJld2FyZHMnOiBOb25lfSwgJ1ZhbHVlJzogOX0seydLZXknOiB7J3NvdXJjZUNpdHknOiAnU01HJywgJ2Rlc3RpbmF0aW9uQ2l0eSc6ICdQX01lcmFrJywgJ3JvdXRlUGFzc2VkJzogWydQX01lcmFrJywgJ1NNRyddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDV9LHsnS2V5Jzogeydzb3VyY2VDaXR5JzogJ1NCWScsICdkZXN0aW5hdGlvbkNpdHknOiAnUF9NZXJhaycsICdyb3V0ZVBhc3NlZCc6IFsnUF9NZXJhaycsICdTQlknXSwgJ2FjdGl2aXR5UmV3YXJkcyc6IE5vbmV9LCAnVmFsdWUnOiAzfSx7J0tleSc6IHsnc291cmNlQ2l0eSc6ICdCS0wnLCAnZGVzdGluYXRpb25DaXR5JzogJ1BfTWVyYWsnLCAncm91dGVQYXNzZWQnOiBbJ1BfTWVyYWsnLCAnQktMJ10sICdhY3Rpdml0eVJld2FyZHMnOiBOb25lfSwgJ1ZhbHVlJzogMn0seydLZXknOiB7J3NvdXJjZUNpdHknOiAnUF9NZXJhaycsICdkZXN0aW5hdGlvbkNpdHknOiAnUF9CYWthdWhlbmknLCAncm91dGVQYXNzZWQnOiBbJ1BfQmFrYXVoZW5pJywgJ1BfTWVyYWsnXSwgJ2FjdGl2aXR5UmV3YXJkcyc6IE5vbmV9LCAnVmFsdWUnOiA1fSwgeydLZXknOiB7J3NvdXJjZUNpdHknOiAnSktUJywgJ2Rlc3RpbmF0aW9uQ2l0eSc6ICdQX0Jha2F1aGVuaScsICdyb3V0ZVBhc3NlZCc6IFsnUF9CYWthdWhlbmknLCAnSktUJ10sICdhY3Rpdml0eVJld2FyZHMnOiBOb25lfSwgJ1ZhbHVlJzogMX0seydLZXknOiB7J3NvdXJjZUNpdHknOiAnQ0JOJywgJ2Rlc3RpbmF0aW9uQ2l0eSc6ICdQX0Jha2F1aGVuaScsICdyb3V0ZVBhc3NlZCc6IFsnUF9CYWthdWhlbmknLCAnQ0JOJ10sICdhY3Rpdml0eVJld2FyZHMnOiBOb25lfSwgJ1ZhbHVlJzogMX0seydLZXknOiB7J3NvdXJjZUNpdHknOiAnU01HJywgJ2Rlc3RpbmF0aW9uQ2l0eSc6ICdQX0Jha2F1aGVuaScsICdyb3V0ZVBhc3NlZCc6IFsnUF9CYWthdWhlbmknLCAnU01HJ10sICdhY3Rpdml0eVJld2FyZHMnOiBOb25lfSwgJ1ZhbHVlJzogMH0seydLZXknOiB7J3NvdXJjZUNpdHknOiAnU0JZJywgJ2Rlc3RpbmF0aW9uQ2l0eSc6ICdQX0Jha2F1aGVuaScsICdyb3V0ZVBhc3NlZCc6IFsnUF9CYWthdWhlbmknLCAnU0JZJ10sICdhY3Rpdml0eVJld2FyZHMnOiBOb25lfSwgJ1ZhbHVlJzogMH0seydLZXknOiB7J3NvdXJjZUNpdHknOiAnQktMJywgJ2Rlc3RpbmF0aW9uQ2l0eSc6ICdQX0Jha2F1aGVuaScsICdyb3V0ZVBhc3NlZCc6IFsnUF9CYWthdWhlbmknLCAnQktMJ10sICdhY3Rpdml0eVJld2FyZHMnOiBOb25lfSwgJ1ZhbHVlJzogMH0seydLZXknOiB7J3NvdXJjZUNpdHknOiAnUF9NZXJhaycsICdkZXN0aW5hdGlvbkNpdHknOiAnTFBHJywgJ3JvdXRlUGFzc2VkJzogWydMUEcnLCAnUF9NZXJhayddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDR9LHsnS2V5Jzogeydzb3VyY2VDaXR5JzogJ0pLVCcsICdkZXN0aW5hdGlvbkNpdHknOiAnTFBHJywgJ3JvdXRlUGFzc2VkJzogWydMUEcnLCAnSktUJ10sICdhY3Rpdml0eVJld2FyZHMnOiBOb25lfSwgJ1ZhbHVlJzogMn0seydLZXknOiB7J3NvdXJjZUNpdHknOiAnQ0JOJywgJ2Rlc3RpbmF0aW9uQ2l0eSc6ICdMUEcnLCAncm91dGVQYXNzZWQnOiBbJ0xQRycsICdDQk4nXSwgJ2FjdGl2aXR5UmV3YXJkcyc6IE5vbmV9LCAnVmFsdWUnOiAxfSx7J0tleSc6IHsnc291cmNlQ2l0eSc6ICdTTUcnLCAnZGVzdGluYXRpb25DaXR5JzogJ0xQRycsICdyb3V0ZVBhc3NlZCc6IFsnTFBHJywgJ1NNRyddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDF9LHsnS2V5Jzogeydzb3VyY2VDaXR5JzogJ1NCWScsICdkZXN0aW5hdGlvbkNpdHknOiAnTFBHJywgJ3JvdXRlUGFzc2VkJzogWydMUEcnLCAnU0JZJ10sICdhY3Rpdml0eVJld2FyZHMnOiBOb25lfSwgJ1ZhbHVlJzogMX0seydLZXknOiB7J3NvdXJjZUNpdHknOiAnQktMJywgJ2Rlc3RpbmF0aW9uQ2l0eSc6ICdMUEcnLCAncm91dGVQYXNzZWQnOiBbJ0xQRycsICdCS0wnXSwgJ2FjdGl2aXR5UmV3YXJkcyc6IE5vbmV9LCAnVmFsdWUnOiAxfSx7J0tleSc6IHsnc291cmNlQ2l0eSc6ICdMUEcnLCAnZGVzdGluYXRpb25DaXR5JzogJ1BMQicsICdyb3V0ZVBhc3NlZCc6IFsnTFBHJywgJ1NCWSddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDU1fSx7J0tleSc6IHsnc291cmNlQ2l0eSc6ICdQX0Jha2F1aGVuaScsICdkZXN0aW5hdGlvbkNpdHknOiAnUExCJywgJ3JvdXRlUGFzc2VkJzogWydQTEInLCAnUF9CYWthdWhlbmknXSwgJ2FjdGl2aXR5UmV3YXJkcyc6IE5vbmV9LCAnVmFsdWUnOiAxMX0seydLZXknOiB7J3NvdXJjZUNpdHknOiAnUF9NZXJhaycsICdkZXN0aW5hdGlvbkNpdHknOiAnUExCJywgJ3JvdXRlUGFzc2VkJzogWydQTEInLCAnUF9NZXJhayddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDZ9LHsnS2V5Jzogeydzb3VyY2VDaXR5JzogJ0pLVCcsICdkZXN0aW5hdGlvbkNpdHknOiAnUExCJywgJ3JvdXRlUGFzc2VkJzogWydQTEInLCAnSktUJ10sICdhY3Rpdml0eVJld2FyZHMnOiBOb25lfSwgJ1ZhbHVlJzogNH0seydLZXknOiB7J3NvdXJjZUNpdHknOiAnQ0JOJywgJ2Rlc3RpbmF0aW9uQ2l0eSc6ICdQTEInLCAncm91dGVQYXNzZWQnOiBbJ1BMQicsICdDQk4nXSwgJ2FjdGl2aXR5UmV3YXJkcyc6IE5vbmV9LCAnVmFsdWUnOiAzfSx7J0tleSc6IHsnc291cmNlQ2l0eSc6ICdTTUcnLCAnZGVzdGluYXRpb25DaXR5JzogJ1BMQicsICdyb3V0ZVBhc3NlZCc6IFsnUExCJywgJ1NNRyddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDJ9LHsnS2V5Jzogeydzb3VyY2VDaXR5JzogJ1NCWScsICdkZXN0aW5hdGlvbkNpdHknOiAnUExCJywgJ3JvdXRlUGFzc2VkJzogWydQTEInLCAnU0JZJ10sICdhY3Rpdml0eVJld2FyZHMnOiBOb25lfSwgJ1ZhbHVlJzogMn0seydLZXknOiB7J3NvdXJjZUNpdHknOiAnQktMJywgJ2Rlc3RpbmF0aW9uQ2l0eSc6ICdQTEInLCAncm91dGVQYXNzZWQnOiBbJ1BMQicsICdCS0wnXSwgJ2FjdGl2aXR5UmV3YXJkcyc6IE5vbmV9LCAnVmFsdWUnOiAyfSx7J0tleSc6IHsnc291cmNlQ2l0eSc6ICdQTEInLCAnZGVzdGluYXRpb25DaXR5JzogJ0pNQicsICdyb3V0ZVBhc3NlZCc6IFsnSk1CJywgJ1BMQiddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDUwfSx7J0tleSc6IHsnc291cmNlQ2l0eSc6ICdMUEcnLCAnZGVzdGluYXRpb25DaXR5JzogJ0pNQicsICdyb3V0ZVBhc3NlZCc6IFsnSk1CJywgJ0xQRyddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDEwfSx7J0tleSc6IHsnc291cmNlQ2l0eSc6ICdQX0Jha2F1aGVuaScsICdkZXN0aW5hdGlvbkNpdHknOiAnSk1CJywgJ3JvdXRlUGFzc2VkJzogWydKTUInLCAnUF9CYWthdWhlbmknXSwgJ2FjdGl2aXR5UmV3YXJkcyc6IE5vbmV9LCAnVmFsdWUnOiA1fSx7J0tleSc6IHsnc291cmNlQ2l0eSc6ICdQX01lcmFrJywgJ2Rlc3RpbmF0aW9uQ2l0eSc6ICdKTUInLCAncm91dGVQYXNzZWQnOiBbJ0pNQicsICdQX01lcmFrJ10sICdhY3Rpdml0eVJld2FyZHMnOiBOb25lfSwgJ1ZhbHVlJzogM30seydLZXknOiB7J3NvdXJjZUNpdHknOiAnSktUJywgJ2Rlc3RpbmF0aW9uQ2l0eSc6ICdKTUInLCAncm91dGVQYXNzZWQnOiBbJ0pNQicsICdKS1QnXSwgJ2FjdGl2aXR5UmV3YXJkcyc6IE5vbmV9LCAnVmFsdWUnOiAzfSx7J0tleSc6IHsnc291cmNlQ2l0eSc6ICdDQk4nLCAnZGVzdGluYXRpb25DaXR5JzogJ0pNQicsICdyb3V0ZVBhc3NlZCc6IFsnSk1CJywgJ0NCTiddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDJ9LHsnS2V5Jzogeydzb3VyY2VDaXR5JzogJ1NNRycsICdkZXN0aW5hdGlvbkNpdHknOiAnSk1CJywgJ3JvdXRlUGFzc2VkJzogWydKTUInLCAnU01HJ10sICdhY3Rpdml0eVJld2FyZHMnOiBOb25lfSwgJ1ZhbHVlJzogMn0seydLZXknOiB7J3NvdXJjZUNpdHknOiAnU0JZJywgJ2Rlc3RpbmF0aW9uQ2l0eSc6ICdKTUInLCAncm91dGVQYXNzZWQnOiBbJ0pNQicsICdTQlknXSwgJ2FjdGl2aXR5UmV3YXJkcyc6IE5vbmV9LCAnVmFsdWUnOiAxfSx7J0tleSc6IHsnc291cmNlQ2l0eSc6ICdCS0wnLCAnZGVzdGluYXRpb25DaXR5JzogJ0pNQicsICdyb3V0ZVBhc3NlZCc6IFsnSk1CJywgJ0JLTCddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDF9LHsnS2V5Jzogeydzb3VyY2VDaXR5JzogJ0pNQicsICdkZXN0aW5hdGlvbkNpdHknOiAnUEJSJywgJ3JvdXRlUGFzc2VkJzogWydQQlInLCAnSk1CJ10sICdhY3Rpdml0eVJld2FyZHMnOiBOb25lfSwgJ1ZhbHVlJzogNjB9LHsnS2V5Jzogeydzb3VyY2VDaXR5JzogJ1BMQicsICdkZXN0aW5hdGlvbkNpdHknOiAnUEJSJywgJ3JvdXRlUGFzc2VkJzogWydQQlInLCAnUExCJ10sICdhY3Rpdml0eVJld2FyZHMnOiBOb25lfSwgJ1ZhbHVlJzogMTJ9LHsnS2V5Jzogeydzb3VyY2VDaXR5JzogJ0xQRycsICdkZXN0aW5hdGlvbkNpdHknOiAnUEJSJywgJ3JvdXRlUGFzc2VkJzogWydQQlInLCAnTFBHJ10sICdhY3Rpdml0eVJld2FyZHMnOiBOb25lfSwgJ1ZhbHVlJzogNn0seydLZXknOiB7J3NvdXJjZUNpdHknOiAnUF9CYWthdWhlbmknLCAnZGVzdGluYXRpb25DaXR5JzogJ1BCUicsICdyb3V0ZVBhc3NlZCc6IFsnUEJSJywgJ1BfQmFrYXVoZW5pJ10sICdhY3Rpdml0eVJld2FyZHMnOiBOb25lfSwgJ1ZhbHVlJzogNH0seydLZXknOiB7J3NvdXJjZUNpdHknOiAnUF9NZXJhaycsICdkZXN0aW5hdGlvbkNpdHknOiAnUEJSJywgJ3JvdXRlUGFzc2VkJzogWydQQlInLCAnUF9NZXJhayddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDN9LHsnS2V5Jzogeydzb3VyY2VDaXR5JzogJ0pLVCcsICdkZXN0aW5hdGlvbkNpdHknOiAnUEJSJywgJ3JvdXRlUGFzc2VkJzogWydQQlInLCAnSktUJ10sICdhY3Rpdml0eVJld2FyZHMnOiBOb25lfSwgJ1ZhbHVlJzogMn0seydLZXknOiB7J3NvdXJjZUNpdHknOiAnQ0JOJywgJ2Rlc3RpbmF0aW9uQ2l0eSc6ICdQQlInLCAncm91dGVQYXNzZWQnOiBbJ1BCUicsICdDQk4nXSwgJ2FjdGl2aXR5UmV3YXJkcyc6IE5vbmV9LCAnVmFsdWUnOiAyfSx7J0tleSc6IHsnc291cmNlQ2l0eSc6ICdTTUcnLCAnZGVzdGluYXRpb25DaXR5JzogJ1BCUicsICdyb3V0ZVBhc3NlZCc6IFsnUEJSJywgJ1NNRyddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDJ9LHsnS2V5Jzogeydzb3VyY2VDaXR5JzogJ1NCWScsICdkZXN0aW5hdGlvbkNpdHknOiAnUEJSJywgJ3JvdXRlUGFzc2VkJzogWydQQlInLCAnU0JZJ10sICdhY3Rpdml0eVJld2FyZHMnOiBOb25lfSwgJ1ZhbHVlJzogMn0seydLZXknOiB7J3NvdXJjZUNpdHknOiAnQktMJywgJ2Rlc3RpbmF0aW9uQ2l0eSc6ICdQQlInLCAncm91dGVQYXNzZWQnOiBbJ1BCUicsICdCS0wnXSwgJ2FjdGl2aXR5UmV3YXJkcyc6IE5vbmV9LCAnVmFsdWUnOiAxfSxdCmhlYWRlcnMgPSB7J1VzZXItQWdlbnQnOiAnVW5pdHlFbmdpbmUtVW5pdHk7IFZlcnNpb246IDIwMTguNC4yNmYxJywnWC1SZXBvcnRFcnJvckFzU3VjY2Vzcyc6ICd0cnVlJywnWC1QbGF5RmFiU0RLJzogJ1VuaXR5U0RLLTIuMjAuMTcwNDExJywnWC1BdXRob3JpemF0aW9uJzogJycsJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJywnQ29udGVudC1MZW5ndGgnOiAnMjIzJywnSG9zdCc6ICc0YWU5LnBsYXlmYWJhcGkuY29tJ30KCmRlZiBwYXNzX2hhdGV5dSgpOgogICAgICAgIGNhcnJlciA9IGNyZWF0ZV9mZigpCiAgICAgICAgaWYgY2FycmVyICE9IE5vbmU6CiAgICAgICAgICAgICAgICB0b2tlbiA9IGNhcnJlclsndG9rZW4nXQogICAgICAgICAgICAgICAgc2tpcF9tbGwodG9rZW4pCiAgICAgICAgICAgICAgICBteHh4eCgpCgpoZWFkZXJzWydYLUF1dGhvcml6YXRpb24nXSA9IGF1dGgKCmRlZiByZW5hbWUoKToKICAgICAgICBkYXRhID0ganNvbi5kdW1wcyh7IkRpc3BsYXlOYW1lIjoiVG9wIFVwIEJ5IEF0YWFYRCJ9KQogICAgICAgIHJlc3BvbnNlID0gcmVxdWVzdHMucG9zdCgnaHR0cHM6Ly80YWU5LnBsYXlmYWJhcGkuY29tL0NsaWVudC9VcGRhdGVVc2VyVGl0bGVEaXNwbGF5TmFtZScsIGhlYWRlcnM9aGVhZGVycywgZGF0YT1kYXRhKS50ZXh0CiAgICAgICAgaWYgcmVzcG9uc2UgIT0gJyc6CiAgICAgICAgICAgICAgICBwYXJzZXIgPSBqc29uLmxvYWRzKHJlc3BvbnNlKQogICAgICAgICAgICAgICAgaWYgcGFyc2VyWydjb2RlJ10gPT0gNDAxOgogICAgICAgICAgICAgICAgICAgICAgICBwYXNzCiAgICAgICAgICAgICAgICBlbGlmIHBhcnNlclsnY29kZSddID09IDIwMDoKICAgICAgICAgICAgICAgICAgICAgICAgYmFja2VuZF9kYXRhID0gcGFyc2VyWydkYXRhJ10KICAgICAgICAgICAgICAgICAgICAgICAgaWYgImFwaUVycm9yIiBpbiBzdHIoYmFja2VuZF9kYXRhKToKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYXNzCiAgICAgICAgICAgICAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hhdCA9IGJhY2tlbmRfZGF0YVsnRGlzcGxheU5hbWUnXQoKIzgwMGsKcmVjb3JkZCA9IFt7J0tleSc6IHsnc291cmNlQ2l0eSc6ICdCS0wnLCAnZGVzdGluYXRpb25DaXR5JzogJ1NCWScsICdyb3V0ZVBhc3NlZCc6IFsnU0JZJywgJ0JLTCddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDQwfSx7J0tleSc6IHsnc291cmNlQ2l0eSc6ICdTQlknLCAnZGVzdGluYXRpb25DaXR5JzogJ1NNRycsICdyb3V0ZVBhc3NlZCc6IFsnU01HJywgJ1NCWSddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDYwfSx7J0tleSc6IHsnc291cmNlQ2l0eSc6ICdCS0wnLCAnZGVzdGluYXRpb25DaXR5JzogJ1NNRycsICdyb3V0ZVBhc3NlZCc6IFsnU01HJywgJ0JLTCddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDEyfSx7J0tleSc6IHsnc291cmNlQ2l0eSc6ICdTTUcnLCAnZGVzdGluYXRpb25DaXR5JzogJ0NCTicsICdyb3V0ZVBhc3NlZCc6IFsnQ0JOJywgJ1NNRyddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDUwfSx7J0tleSc6IHsnc291cmNlQ2l0eSc6ICdTQlknLCAnZGVzdGluYXRpb25DaXR5JzogJ0NCTicsICdyb3V0ZVBhc3NlZCc6IFsnQ0JOJywgJ1NCWSddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDEwfSx7J0tleSc6IHsnc291cmNlQ2l0eSc6ICdCS0wnLCAnZGVzdGluYXRpb25DaXR5JzogJ0NCTicsICdyb3V0ZVBhc3NlZCc6IFsnQ0JOJywgJ0JLTCddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDV9LHsnS2V5Jzogeydzb3VyY2VDaXR5JzogJ0NCTicsICdkZXN0aW5hdGlvbkNpdHknOiAnSktUJywgJ3JvdXRlUGFzc2VkJzogWydKS1QnLCAnQ0JOJ10sICdhY3Rpdml0eVJld2FyZHMnOiBOb25lfSwgJ1ZhbHVlJzogNDV9LHsnS2V5Jzogeydzb3VyY2VDaXR5JzogJ1NNRycsICdkZXN0aW5hdGlvbkNpdHknOiAnSktUJywgJ3JvdXRlUGFzc2VkJzogWydKS1QnLCAnU01HJ10sICdhY3Rpdml0eVJld2FyZHMnOiBOb25lfSwgJ1ZhbHVlJzogOX0seydLZXknOiB7J3NvdXJjZUNpdHknOiAnU0JZJywgJ2Rlc3RpbmF0aW9uQ2l0eSc6ICdKS1QnLCAncm91dGVQYXNzZWQnOiBbJ0pLVCcsICdTQlknXSwgJ2FjdGl2aXR5UmV3YXJkcyc6IE5vbmV9LCAnVmFsdWUnOiA1fSx7J0tleSc6IHsnc291cmNlQ2l0eSc6ICdKS1QnLCAnZGVzdGluYXRpb25DaXR5JzogJ0JLTCcsICdyb3V0ZVBhc3NlZCc6IFsnQktMJywgJ0pLVCddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDN9LHsnS2V5Jzogeydzb3VyY2VDaXR5JzogJ0pLVCcsICdkZXN0aW5hdGlvbkNpdHknOiAnUF9NZXJhaycsICdyb3V0ZVBhc3NlZCc6IFsnUF9NZXJhaycsICdKS1QnXSwgJ2FjdGl2aXR5UmV3YXJkcyc6IE5vbmV9LCAnVmFsdWUnOiA0NX0seydLZXknOiB7J3NvdXJjZUNpdHknOiAnQ0JOJywgJ2Rlc3RpbmF0aW9uQ2l0eSc6ICdQX01lcmFrJywgJ3JvdXRlUGFzc2VkJzogWydQX01lcmFrJywgJ0NCTiddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDl9LHsnS2V5Jzogeydzb3VyY2VDaXR5JzogJ1NNRycsICdkZXN0aW5hdGlvbkNpdHknOiAnUF9NZXJhaycsICdyb3V0ZVBhc3NlZCc6IFsnUF9NZXJhaycsICdTTUcnXSwgJ2FjdGl2aXR5UmV3YXJkcyc6IE5vbmV9LCAnVmFsdWUnOiA1fSx7J0tleSc6IHsnc291cmNlQ2l0eSc6ICdTQlknLCAnZGVzdGluYXRpb25DaXR5JzogJ1BfTWVyYWsnLCAncm91dGVQYXNzZWQnOiBbJ1BfTWVyYWsnLCAnU0JZJ10sICdhY3Rpdml0eVJld2FyZHMnOiBOb25lfSwgJ1ZhbHVlJzogM30seydLZXknOiB7J3NvdXJjZUNpdHknOiAnQktMJywgJ2Rlc3RpbmF0aW9uQ2l0eSc6ICdQX01lcmFrJywgJ3JvdXRlUGFzc2VkJzogWydQX01lcmFrJywgJ0JLTCddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDJ9LHsnS2V5Jzogeydzb3VyY2VDaXR5JzogJ1BfTWVyYWsnLCAnZGVzdGluYXRpb25DaXR5JzogJ1BfQmFrYXVoZW5pJywgJ3JvdXRlUGFzc2VkJzogWydQX0Jha2F1aGVuaScsICdQX01lcmFrJ10sICdhY3Rpdml0eVJld2FyZHMnOiBOb25lfSwgJ1ZhbHVlJzogNX0sIHsnS2V5Jzogeydzb3VyY2VDaXR5JzogJ0pLVCcsICdkZXN0aW5hdGlvbkNpdHknOiAnUF9CYWthdWhlbmknLCAncm91dGVQYXNzZWQnOiBbJ1BfQmFrYXVoZW5pJywgJ0pLVCddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDF9LHsnS2V5Jzogeydzb3VyY2VDaXR5JzogJ0NCTicsICdkZXN0aW5hdGlvbkNpdHknOiAnUF9CYWthdWhlbmknLCAncm91dGVQYXNzZWQnOiBbJ1BfQmFrYXVoZW5pJywgJ0NCTiddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDF9LHsnS2V5Jzogeydzb3VyY2VDaXR5JzogJ1NNRycsICdkZXN0aW5hdGlvbkNpdHknOiAnUF9CYWthdWhlbmknLCAncm91dGVQYXNzZWQnOiBbJ1BfQmFrYXVoZW5pJywgJ1NNRyddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDB9LHsnS2V5Jzogeydzb3VyY2VDaXR5JzogJ1NCWScsICdkZXN0aW5hdGlvbkNpdHknOiAnUF9CYWthdWhlbmknLCAncm91dGVQYXNzZWQnOiBbJ1BfQmFrYXVoZW5pJywgJ1NCWSddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDB9LHsnS2V5Jzogeydzb3VyY2VDaXR5JzogJ0JLTCcsICdkZXN0aW5hdGlvbkNpdHknOiAnUF9CYWthdWhlbmknLCAncm91dGVQYXNzZWQnOiBbJ1BfQmFrYXVoZW5pJywgJ0JLTCddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDB9LHsnS2V5Jzogeydzb3VyY2VDaXR5JzogJ1BfTWVyYWsnLCAnZGVzdGluYXRpb25DaXR5JzogJ0xQRycsICdyb3V0ZVBhc3NlZCc6IFsnTFBHJywgJ1BfTWVyYWsnXSwgJ2FjdGl2aXR5UmV3YXJkcyc6IE5vbmV9LCAnVmFsdWUnOiA0fSx7J0tleSc6IHsnc291cmNlQ2l0eSc6ICdKS1QnLCAnZGVzdGluYXRpb25DaXR5JzogJ0xQRycsICdyb3V0ZVBhc3NlZCc6IFsnTFBHJywgJ0pLVCddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDJ9LHsnS2V5Jzogeydzb3VyY2VDaXR5JzogJ0NCTicsICdkZXN0aW5hdGlvbkNpdHknOiAnTFBHJywgJ3JvdXRlUGFzc2VkJzogWydMUEcnLCAnQ0JOJ10sICdhY3Rpdml0eVJld2FyZHMnOiBOb25lfSwgJ1ZhbHVlJzogMX0seydLZXknOiB7J3NvdXJjZUNpdHknOiAnU01HJywgJ2Rlc3RpbmF0aW9uQ2l0eSc6ICdMUEcnLCAncm91dGVQYXNzZWQnOiBbJ0xQRycsICdTTUcnXSwgJ2FjdGl2aXR5UmV3YXJkcyc6IE5vbmV9LCAnVmFsdWUnOiAxfSx7J0tleSc6IHsnc291cmNlQ2l0eSc6ICdTQlknLCAnZGVzdGluYXRpb25DaXR5JzogJ0xQRycsICdyb3V0ZVBhc3NlZCc6IFsnTFBHJywgJ1NCWSddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDF9LHsnS2V5Jzogeydzb3VyY2VDaXR5JzogJ0JLTCcsICdkZXN0aW5hdGlvbkNpdHknOiAnTFBHJywgJ3JvdXRlUGFzc2VkJzogWydMUEcnLCAnQktMJ10sICdhY3Rpdml0eVJld2FyZHMnOiBOb25lfSwgJ1ZhbHVlJzogMX0seydLZXknOiB7J3NvdXJjZUNpdHknOiAnTFBHJywgJ2Rlc3RpbmF0aW9uQ2l0eSc6ICdQTEInLCAncm91dGVQYXNzZWQnOiBbJ0xQRycsICdTQlknXSwgJ2FjdGl2aXR5UmV3YXJkcyc6IE5vbmV9LCAnVmFsdWUnOiA1NX0seydLZXknOiB7J3NvdXJjZUNpdHknOiAnUF9CYWthdWhlbmknLCAnZGVzdGluYXRpb25DaXR5JzogJ1BMQicsICdyb3V0ZVBhc3NlZCc6IFsnUExCJywgJ1BfQmFrYXVoZW5pJ10sICdhY3Rpdml0eVJld2FyZHMnOiBOb25lfSwgJ1ZhbHVlJzogMTF9LHsnS2V5Jzogeydzb3VyY2VDaXR5JzogJ1BfTWVyYWsnLCAnZGVzdGluYXRpb25DaXR5JzogJ1BMQicsICdyb3V0ZVBhc3NlZCc6IFsnUExCJywgJ1BfTWVyYWsnXSwgJ2FjdGl2aXR5UmV3YXJkcyc6IE5vbmV9LCAnVmFsdWUnOiA2fSx7J0tleSc6IHsnc291cmNlQ2l0eSc6ICdKS1QnLCAnZGVzdGluYXRpb25DaXR5JzogJ1BMQicsICdyb3V0ZVBhc3NlZCc6IFsnUExCJywgJ0pLVCddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDR9LHsnS2V5Jzogeydzb3VyY2VDaXR5JzogJ0NCTicsICdkZXN0aW5hdGlvbkNpdHknOiAnUExCJywgJ3JvdXRlUGFzc2VkJzogWydQTEInLCAnQ0JOJ10sICdhY3Rpdml0eVJld2FyZHMnOiBOb25lfSwgJ1ZhbHVlJzogM30seydLZXknOiB7J3NvdXJjZUNpdHknOiAnU01HJywgJ2Rlc3RpbmF0aW9uQ2l0eSc6ICdQTEInLCAncm91dGVQYXNzZWQnOiBbJ1BMQicsICdTTUcnXSwgJ2FjdGl2aXR5UmV3YXJkcyc6IE5vbmV9LCAnVmFsdWUnOiAyfSx7J0tleSc6IHsnc291cmNlQ2l0eSc6ICdTQlknLCAnZGVzdGluYXRpb25DaXR5JzogJ1BMQicsICdyb3V0ZVBhc3NlZCc6IFsnUExCJywgJ1NCWSddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDJ9LHsnS2V5Jzogeydzb3VyY2VDaXR5JzogJ0JLTCcsICdkZXN0aW5hdGlvbkNpdHknOiAnUExCJywgJ3JvdXRlUGFzc2VkJzogWydQTEInLCAnQktMJ10sICdhY3Rpdml0eVJld2FyZHMnOiBOb25lfSwgJ1ZhbHVlJzogMn0seydLZXknOiB7J3NvdXJjZUNpdHknOiAnUExCJywgJ2Rlc3RpbmF0aW9uQ2l0eSc6ICdKTUInLCAncm91dGVQYXNzZWQnOiBbJ0pNQicsICdQTEInXSwgJ2FjdGl2aXR5UmV3YXJkcyc6IE5vbmV9LCAnVmFsdWUnOiA1MH0seydLZXknOiB7J3NvdXJjZUNpdHknOiAnTFBHJywgJ2Rlc3RpbmF0aW9uQ2l0eSc6ICdKTUInLCAncm91dGVQYXNzZWQnOiBbJ0pNQicsICdMUEcnXSwgJ2FjdGl2aXR5UmV3YXJkcyc6IE5vbmV9LCAnVmFsdWUnOiAxMH0seydLZXknOiB7J3NvdXJjZUNpdHknOiAnUF9CYWthdWhlbmknLCAnZGVzdGluYXRpb25DaXR5JzogJ0pNQicsICdyb3V0ZVBhc3NlZCc6IFsnSk1CJywgJ1BfQmFrYXVoZW5pJ10sICdhY3Rpdml0eVJld2FyZHMnOiBOb25lfSwgJ1ZhbHVlJzogNX0seydLZXknOiB7J3NvdXJjZUNpdHknOiAnUF9NZXJhaycsICdkZXN0aW5hdGlvbkNpdHknOiAnSk1CJywgJ3JvdXRlUGFzc2VkJzogWydKTUInLCAnUF9NZXJhayddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDN9LHsnS2V5Jzogeydzb3VyY2VDaXR5JzogJ0pLVCcsICdkZXN0aW5hdGlvbkNpdHknOiAnSk1CJywgJ3JvdXRlUGFzc2VkJzogWydKTUInLCAnSktUJ10sICdhY3Rpdml0eVJld2FyZHMnOiBOb25lfSwgJ1ZhbHVlJzogM30seydLZXknOiB7J3NvdXJjZUNpdHknOiAnQ0JOJywgJ2Rlc3RpbmF0aW9uQ2l0eSc6ICdKTUInLCAncm91dGVQYXNzZWQnOiBbJ0pNQicsICdDQk4nXSwgJ2FjdGl2aXR5UmV3YXJkcyc6IE5vbmV9LCAnVmFsdWUnOiAyfSx7J0tleSc6IHsnc291cmNlQ2l0eSc6ICdTTUcnLCAnZGVzdGluYXRpb25DaXR5JzogJ0pNQicsICdyb3V0ZVBhc3NlZCc6IFsnSk1CJywgJ1NNRyddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDJ9LHsnS2V5Jzogeydzb3VyY2VDaXR5JzogJ1NCWScsICdkZXN0aW5hdGlvbkNpdHknOiAnSk1CJywgJ3JvdXRlUGFzc2VkJzogWydKTUInLCAnU0JZJ10sICdhY3Rpdml0eVJld2FyZHMnOiBOb25lfSwgJ1ZhbHVlJzogMX0seydLZXknOiB7J3NvdXJjZUNpdHknOiAnQktMJywgJ2Rlc3RpbmF0aW9uQ2l0eSc6ICdKTUInLCAncm91dGVQYXNzZWQnOiBbJ0pNQicsICdCS0wnXSwgJ2FjdGl2aXR5UmV3YXJkcyc6IE5vbmV9LCAnVmFsdWUnOiAxfSx7J0tleSc6IHsnc291cmNlQ2l0eSc6ICdKTUInLCAnZGVzdGluYXRpb25DaXR5JzogJ1BCUicsICdyb3V0ZVBhc3NlZCc6IFsnUEJSJywgJ0pNQiddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDYwfSx7J0tleSc6IHsnc291cmNlQ2l0eSc6ICdQTEInLCAnZGVzdGluYXRpb25DaXR5JzogJ1BCUicsICdyb3V0ZVBhc3NlZCc6IFsnUEJSJywgJ1BMQiddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDEyfSx7J0tleSc6IHsnc291cmNlQ2l0eSc6ICdMUEcnLCAnZGVzdGluYXRpb25DaXR5JzogJ1BCUicsICdyb3V0ZVBhc3NlZCc6IFsnUEJSJywgJ0xQRyddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDZ9LHsnS2V5Jzogeydzb3VyY2VDaXR5JzogJ1BfQmFrYXVoZW5pJywgJ2Rlc3RpbmF0aW9uQ2l0eSc6ICdQQlInLCAncm91dGVQYXNzZWQnOiBbJ1BCUicsICdQX0Jha2F1aGVuaSddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDR9LHsnS2V5Jzogeydzb3VyY2VDaXR5JzogJ1BfTWVyYWsnLCAnZGVzdGluYXRpb25DaXR5JzogJ1BCUicsICdyb3V0ZVBhc3NlZCc6IFsnUEJSJywgJ1BfTWVyYWsnXSwgJ2FjdGl2aXR5UmV3YXJkcyc6IE5vbmV9LCAnVmFsdWUnOiAzfSx7J0tleSc6IHsnc291cmNlQ2l0eSc6ICdKS1QnLCAnZGVzdGluYXRpb25DaXR5JzogJ1BCUicsICdyb3V0ZVBhc3NlZCc6IFsnUEJSJywgJ0pLVCddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDJ9LHsnS2V5Jzogeydzb3VyY2VDaXR5JzogJ0NCTicsICdkZXN0aW5hdGlvbkNpdHknOiAnUEJSJywgJ3JvdXRlUGFzc2VkJzogWydQQlInLCAnQ0JOJ10sICdhY3Rpdml0eVJld2FyZHMnOiBOb25lfSwgJ1ZhbHVlJzogMn0seydLZXknOiB7J3NvdXJjZUNpdHknOiAnU01HJywgJ2Rlc3RpbmF0aW9uQ2l0eSc6ICdQQlInLCAncm91dGVQYXNzZWQnOiBbJ1BCUicsICdTTUcnXSwgJ2FjdGl2aXR5UmV3YXJkcyc6IE5vbmV9LCAnVmFsdWUnOiAyfSx7J0tleSc6IHsnc291cmNlQ2l0eSc6ICdTQlknLCAnZGVzdGluYXRpb25DaXR5JzogJ1BCUicsICdyb3V0ZVBhc3NlZCc6IFsnUEJSJywgJ1NCWSddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDJ9LHsnS2V5Jzogeydzb3VyY2VDaXR5JzogJ0JLTCcsICdkZXN0aW5hdGlvbkNpdHknOiAnUEJSJywgJ3JvdXRlUGFzc2VkJzogWydQQlInLCAnQktMJ10sICdhY3Rpdml0eVJld2FyZHMnOiBOb25lfSwgJ1ZhbHVlJzogMX0sXQpoZWFkZXJzID0geydVc2VyLUFnZW50JzogJ1VuaXR5RW5naW5lLVVuaXR5OyBWZXJzaW9uOiAyMDE4LjQuMjZmMScsJ1gtUmVwb3J0RXJyb3JBc1N1Y2Nlc3MnOiAndHJ1ZScsJ1gtUGxheUZhYlNESyc6ICdVbml0eVNESy0yLjIwLjE3MDQxMScsJ1gtQXV0aG9yaXphdGlvbic6ICcnLCdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsJ0NvbnRlbnQtTGVuZ3RoJzogJzIyMycsJ0hvc3QnOiAnNGFlOS5wbGF5ZmFiYXBpLmNvbSd9CgpkZWYgcGFzc19saWtleXUoKToKICAgICAgICBjYXJyZXIgPSBjcmVhdGVfZmYoKQogICAgICAgIGlmIGNhcnJlciAhPSBOb25lOgogICAgICAgICAgICAgICAgdG9rZW4gPSBjYXJyZXJbJ3Rva2VuJ10KICAgICAgICAgICAgICAgIHNraXBfbWxsKHRva2VuKQogICAgICAgICAgICAgICAgbXh4eHgoKQoKaGVhZGVyc1snWC1BdXRob3JpemF0aW9uJ10gPSBhdXRoCgpkZWYgcmVuYW1lKCk6CiAgICAgICAgZGF0YSA9IGpzb24uZHVtcHMoeyJEaXNwbGF5TmFtZSI6IlRvcCBVcCBCeSBBdGFhWEQifSkKICAgICAgICByZXNwb25zZSA9IHJlcXVlc3RzLnBvc3QoJ2h0dHBzOi8vNGFlOS5wbGF5ZmFiYXBpLmNvbS9DbGllbnQvVXBkYXRlVXNlclRpdGxlRGlzcGxheU5hbWUnLCBoZWFkZXJzPWhlYWRlcnMsIGRhdGE9ZGF0YSkudGV4dAogICAgICAgIGlmIHJlc3BvbnNlICE9ICcnOgogICAgICAgICAgICAgICAgcGFyc2VyID0ganNvbi5sb2FkcyhyZXNwb25zZSkKICAgICAgICAgICAgICAgIGlmIHBhcnNlclsnY29kZSddID09IDQwMToKICAgICAgICAgICAgICAgICAgICAgICAgcGFzcwogICAgICAgICAgICAgICAgZWxpZiBwYXJzZXJbJ2NvZGUnXSA9PSAyMDA6CiAgICAgICAgICAgICAgICAgICAgICAgIGJhY2tlbmRfZGF0YSA9IHBhcnNlclsnZGF0YSddCiAgICAgICAgICAgICAgICAgICAgICAgIGlmICJhcGlFcnJvciIgaW4gc3RyKGJhY2tlbmRfZGF0YSk6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGFzcwogICAgICAgICAgICAgICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoYXQgPSBiYWNrZW5kX2RhdGFbJ0Rpc3BsYXlOYW1lJ10KCiM1MDBrCnJlY29yZGQgPSBbeydLZXknOiB7J3NvdXJjZUNpdHknOiAnQktMJywgJ2Rlc3RpbmF0aW9uQ2l0eSc6ICdTQlknLCAncm91dGVQYXNzZWQnOiBbJ1NCWScsICdCS0wnXSwgJ2FjdGl2aXR5UmV3YXJkcyc6IE5vbmV9LCAnVmFsdWUnOiA0MH0seydLZXknOiB7J3NvdXJjZUNpdHknOiAnU0JZJywgJ2Rlc3RpbmF0aW9uQ2l0eSc6ICdTTUcnLCAncm91dGVQYXNzZWQnOiBbJ1NNRycsICdTQlknXSwgJ2FjdGl2aXR5UmV3YXJkcyc6IE5vbmV9LCAnVmFsdWUnOiA2MH0seydLZXknOiB7J3NvdXJjZUNpdHknOiAnQktMJywgJ2Rlc3RpbmF0aW9uQ2l0eSc6ICdTTUcnLCAncm91dGVQYXNzZWQnOiBbJ1NNRycsICdCS0wnXSwgJ2FjdGl2aXR5UmV3YXJkcyc6IE5vbmV9LCAnVmFsdWUnOiAxMn0seydLZXknOiB7J3NvdXJjZUNpdHknOiAnU01HJywgJ2Rlc3RpbmF0aW9uQ2l0eSc6ICdDQk4nLCAncm91dGVQYXNzZWQnOiBbJ0NCTicsICdTTUcnXSwgJ2FjdGl2aXR5UmV3YXJkcyc6IE5vbmV9LCAnVmFsdWUnOiA1MH0seydLZXknOiB7J3NvdXJjZUNpdHknOiAnU0JZJywgJ2Rlc3RpbmF0aW9uQ2l0eSc6ICdDQk4nLCAncm91dGVQYXNzZWQnOiBbJ0NCTicsICdTQlknXSwgJ2FjdGl2aXR5UmV3YXJkcyc6IE5vbmV9LCAnVmFsdWUnOiAxMH0seydLZXknOiB7J3NvdXJjZUNpdHknOiAnQktMJywgJ2Rlc3RpbmF0aW9uQ2l0eSc6ICdDQk4nLCAncm91dGVQYXNzZWQnOiBbJ0NCTicsICdCS0wnXSwgJ2FjdGl2aXR5UmV3YXJkcyc6IE5vbmV9LCAnVmFsdWUnOiA1fSx7J0tleSc6IHsnc291cmNlQ2l0eSc6ICdDQk4nLCAnZGVzdGluYXRpb25DaXR5JzogJ0pLVCcsICdyb3V0ZVBhc3NlZCc6IFsnSktUJywgJ0NCTiddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDQ1fSx7J0tleSc6IHsnc291cmNlQ2l0eSc6ICdTTUcnLCAnZGVzdGluYXRpb25DaXR5JzogJ0pLVCcsICdyb3V0ZVBhc3NlZCc6IFsnSktUJywgJ1NNRyddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDl9LHsnS2V5Jzogeydzb3VyY2VDaXR5JzogJ1NCWScsICdkZXN0aW5hdGlvbkNpdHknOiAnSktUJywgJ3JvdXRlUGFzc2VkJzogWydKS1QnLCAnU0JZJ10sICdhY3Rpdml0eVJld2FyZHMnOiBOb25lfSwgJ1ZhbHVlJzogNX0seydLZXknOiB7J3NvdXJjZUNpdHknOiAnSktUJywgJ2Rlc3RpbmF0aW9uQ2l0eSc6ICdCS0wnLCAncm91dGVQYXNzZWQnOiBbJ0JLTCcsICdKS1QnXSwgJ2FjdGl2aXR5UmV3YXJkcyc6IE5vbmV9LCAnVmFsdWUnOiAzfSx7J0tleSc6IHsnc291cmNlQ2l0eSc6ICdKS1QnLCAnZGVzdGluYXRpb25DaXR5JzogJ1BfTWVyYWsnLCAncm91dGVQYXNzZWQnOiBbJ1BfTWVyYWsnLCAnSktUJ10sICdhY3Rpdml0eVJld2FyZHMnOiBOb25lfSwgJ1ZhbHVlJzogNDV9LHsnS2V5Jzogeydzb3VyY2VDaXR5JzogJ0NCTicsICdkZXN0aW5hdGlvbkNpdHknOiAnUF9NZXJhaycsICdyb3V0ZVBhc3NlZCc6IFsnUF9NZXJhaycsICdDQk4nXSwgJ2FjdGl2aXR5UmV3YXJkcyc6IE5vbmV9LCAnVmFsdWUnOiA5fSx7J0tleSc6IHsnc291cmNlQ2l0eSc6ICdTTUcnLCAnZGVzdGluYXRpb25DaXR5JzogJ1BfTWVyYWsnLCAncm91dGVQYXNzZWQnOiBbJ1BfTWVyYWsnLCAnU01HJ10sICdhY3Rpdml0eVJld2FyZHMnOiBOb25lfSwgJ1ZhbHVlJzogNX0seydLZXknOiB7J3NvdXJjZUNpdHknOiAnU0JZJywgJ2Rlc3RpbmF0aW9uQ2l0eSc6ICdQX01lcmFrJywgJ3JvdXRlUGFzc2VkJzogWydQX01lcmFrJywgJ1NCWSddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDN9LHsnS2V5Jzogeydzb3VyY2VDaXR5JzogJ0JLTCcsICdkZXN0aW5hdGlvbkNpdHknOiAnUF9NZXJhaycsICdyb3V0ZVBhc3NlZCc6IFsnUF9NZXJhaycsICdCS0wnXSwgJ2FjdGl2aXR5UmV3YXJkcyc6IE5vbmV9LCAnVmFsdWUnOiAyfSx7J0tleSc6IHsnc291cmNlQ2l0eSc6ICdQX01lcmFrJywgJ2Rlc3RpbmF0aW9uQ2l0eSc6ICdQX0Jha2F1aGVuaScsICdyb3V0ZVBhc3NlZCc6IFsnUF9CYWthdWhlbmknLCAnUF9NZXJhayddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDV9LCB7J0tleSc6IHsnc291cmNlQ2l0eSc6ICdKS1QnLCAnZGVzdGluYXRpb25DaXR5JzogJ1BfQmFrYXVoZW5pJywgJ3JvdXRlUGFzc2VkJzogWydQX0Jha2F1aGVuaScsICdKS1QnXSwgJ2FjdGl2aXR5UmV3YXJkcyc6IE5vbmV9LCAnVmFsdWUnOiAxfSx7J0tleSc6IHsnc291cmNlQ2l0eSc6ICdDQk4nLCAnZGVzdGluYXRpb25DaXR5JzogJ1BfQmFrYXVoZW5pJywgJ3JvdXRlUGFzc2VkJzogWydQX0Jha2F1aGVuaScsICdDQk4nXSwgJ2FjdGl2aXR5UmV3YXJkcyc6IE5vbmV9LCAnVmFsdWUnOiAxfSx7J0tleSc6IHsnc291cmNlQ2l0eSc6ICdTTUcnLCAnZGVzdGluYXRpb25DaXR5JzogJ1BfQmFrYXVoZW5pJywgJ3JvdXRlUGFzc2VkJzogWydQX0Jha2F1aGVuaScsICdTTUcnXSwgJ2FjdGl2aXR5UmV3YXJkcyc6IE5vbmV9LCAnVmFsdWUnOiAwfSx7J0tleSc6IHsnc291cmNlQ2l0eSc6ICdTQlknLCAnZGVzdGluYXRpb25DaXR5JzogJ1BfQmFrYXVoZW5pJywgJ3JvdXRlUGFzc2VkJzogWydQX0Jha2F1aGVuaScsICdTQlknXSwgJ2FjdGl2aXR5UmV3YXJkcyc6IE5vbmV9LCAnVmFsdWUnOiAwfSx7J0tleSc6IHsnc291cmNlQ2l0eSc6ICdCS0wnLCAnZGVzdGluYXRpb25DaXR5JzogJ1BfQmFrYXVoZW5pJywgJ3JvdXRlUGFzc2VkJzogWydQX0Jha2F1aGVuaScsICdCS0wnXSwgJ2FjdGl2aXR5UmV3YXJkcyc6IE5vbmV9LCAnVmFsdWUnOiAwfSx7J0tleSc6IHsnc291cmNlQ2l0eSc6ICdQX01lcmFrJywgJ2Rlc3RpbmF0aW9uQ2l0eSc6ICdMUEcnLCAncm91dGVQYXNzZWQnOiBbJ0xQRycsICdQX01lcmFrJ10sICdhY3Rpdml0eVJld2FyZHMnOiBOb25lfSwgJ1ZhbHVlJzogNH0seydLZXknOiB7J3NvdXJjZUNpdHknOiAnSktUJywgJ2Rlc3RpbmF0aW9uQ2l0eSc6ICdMUEcnLCAncm91dGVQYXNzZWQnOiBbJ0xQRycsICdKS1QnXSwgJ2FjdGl2aXR5UmV3YXJkcyc6IE5vbmV9LCAnVmFsdWUnOiAyfSx7J0tleSc6IHsnc291cmNlQ2l0eSc6ICdDQk4nLCAnZGVzdGluYXRpb25DaXR5JzogJ0xQRycsICdyb3V0ZVBhc3NlZCc6IFsnTFBHJywgJ0NCTiddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDF9LHsnS2V5Jzogeydzb3VyY2VDaXR5JzogJ1NNRycsICdkZXN0aW5hdGlvbkNpdHknOiAnTFBHJywgJ3JvdXRlUGFzc2VkJzogWydMUEcnLCAnU01HJ10sICdhY3Rpdml0eVJld2FyZHMnOiBOb25lfSwgJ1ZhbHVlJzogMX0seydLZXknOiB7J3NvdXJjZUNpdHknOiAnU0JZJywgJ2Rlc3RpbmF0aW9uQ2l0eSc6ICdMUEcnLCAncm91dGVQYXNzZWQnOiBbJ0xQRycsICdTQlknXSwgJ2FjdGl2aXR5UmV3YXJkcyc6IE5vbmV9LCAnVmFsdWUnOiAxfSx7J0tleSc6IHsnc291cmNlQ2l0eSc6ICdCS0wnLCAnZGVzdGluYXRpb25DaXR5JzogJ0xQRycsICdyb3V0ZVBhc3NlZCc6IFsnTFBHJywgJ0JLTCddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDF9LHsnS2V5Jzogeydzb3VyY2VDaXR5JzogJ0xQRycsICdkZXN0aW5hdGlvbkNpdHknOiAnUExCJywgJ3JvdXRlUGFzc2VkJzogWydMUEcnLCAnU0JZJ10sICdhY3Rpdml0eVJld2FyZHMnOiBOb25lfSwgJ1ZhbHVlJzogNTV9LHsnS2V5Jzogeydzb3VyY2VDaXR5JzogJ1BfQmFrYXVoZW5pJywgJ2Rlc3RpbmF0aW9uQ2l0eSc6ICdQTEInLCAncm91dGVQYXNzZWQnOiBbJ1BMQicsICdQX0Jha2F1aGVuaSddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDExfSx7J0tleSc6IHsnc291cmNlQ2l0eSc6ICdQX01lcmFrJywgJ2Rlc3RpbmF0aW9uQ2l0eSc6ICdQTEInLCAncm91dGVQYXNzZWQnOiBbJ1BMQicsICdQX01lcmFrJ10sICdhY3Rpdml0eVJld2FyZHMnOiBOb25lfSwgJ1ZhbHVlJzogNn0seydLZXknOiB7J3NvdXJjZUNpdHknOiAnSktUJywgJ2Rlc3RpbmF0aW9uQ2l0eSc6ICdQTEInLCAncm91dGVQYXNzZWQnOiBbJ1BMQicsICdKS1QnXSwgJ2FjdGl2aXR5UmV3YXJkcyc6IE5vbmV9LCAnVmFsdWUnOiA0fSx7J0tleSc6IHsnc291cmNlQ2l0eSc6ICdDQk4nLCAnZGVzdGluYXRpb25DaXR5JzogJ1BMQicsICdyb3V0ZVBhc3NlZCc6IFsnUExCJywgJ0NCTiddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDN9LHsnS2V5Jzogeydzb3VyY2VDaXR5JzogJ1NNRycsICdkZXN0aW5hdGlvbkNpdHknOiAnUExCJywgJ3JvdXRlUGFzc2VkJzogWydQTEInLCAnU01HJ10sICdhY3Rpdml0eVJld2FyZHMnOiBOb25lfSwgJ1ZhbHVlJzogMn0seydLZXknOiB7J3NvdXJjZUNpdHknOiAnU0JZJywgJ2Rlc3RpbmF0aW9uQ2l0eSc6ICdQTEInLCAncm91dGVQYXNzZWQnOiBbJ1BMQicsICdTQlknXSwgJ2FjdGl2aXR5UmV3YXJkcyc6IE5vbmV9LCAnVmFsdWUnOiAyfSx7J0tleSc6IHsnc291cmNlQ2l0eSc6ICdCS0wnLCAnZGVzdGluYXRpb25DaXR5JzogJ1BMQicsICdyb3V0ZVBhc3NlZCc6IFsnUExCJywgJ0JLTCddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDJ9LHsnS2V5Jzogeydzb3VyY2VDaXR5JzogJ1BMQicsICdkZXN0aW5hdGlvbkNpdHknOiAnSk1CJywgJ3JvdXRlUGFzc2VkJzogWydKTUInLCAnUExCJ10sICdhY3Rpdml0eVJld2FyZHMnOiBOb25lfSwgJ1ZhbHVlJzogNTB9LHsnS2V5Jzogeydzb3VyY2VDaXR5JzogJ0xQRycsICdkZXN0aW5hdGlvbkNpdHknOiAnSk1CJywgJ3JvdXRlUGFzc2VkJzogWydKTUInLCAnTFBHJ10sICdhY3Rpdml0eVJld2FyZHMnOiBOb25lfSwgJ1ZhbHVlJzogMTB9LHsnS2V5Jzogeydzb3VyY2VDaXR5JzogJ1BfQmFrYXVoZW5pJywgJ2Rlc3RpbmF0aW9uQ2l0eSc6ICdKTUInLCAncm91dGVQYXNzZWQnOiBbJ0pNQicsICdQX0Jha2F1aGVuaSddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDV9LHsnS2V5Jzogeydzb3VyY2VDaXR5JzogJ1BfTWVyYWsnLCAnZGVzdGluYXRpb25DaXR5JzogJ0pNQicsICdyb3V0ZVBhc3NlZCc6IFsnSk1CJywgJ1BfTWVyYWsnXSwgJ2FjdGl2aXR5UmV3YXJkcyc6IE5vbmV9LCAnVmFsdWUnOiAzfSx7J0tleSc6IHsnc291cmNlQ2l0eSc6ICdKS1QnLCAnZGVzdGluYXRpb25DaXR5JzogJ0pNQicsICdyb3V0ZVBhc3NlZCc6IFsnSk1CJywgJ0pLVCddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDN9LHsnS2V5Jzogeydzb3VyY2VDaXR5JzogJ0NCTicsICdkZXN0aW5hdGlvbkNpdHknOiAnSk1CJywgJ3JvdXRlUGFzc2VkJzogWydKTUInLCAnQ0JOJ10sICdhY3Rpdml0eVJld2FyZHMnOiBOb25lfSwgJ1ZhbHVlJzogMn0seydLZXknOiB7J3NvdXJjZUNpdHknOiAnU01HJywgJ2Rlc3RpbmF0aW9uQ2l0eSc6ICdKTUInLCAncm91dGVQYXNzZWQnOiBbJ0pNQicsICdTTUcnXSwgJ2FjdGl2aXR5UmV3YXJkcyc6IE5vbmV9LCAnVmFsdWUnOiAyfSx7J0tleSc6IHsnc291cmNlQ2l0eSc6ICdTQlknLCAnZGVzdGluYXRpb25DaXR5JzogJ0pNQicsICdyb3V0ZVBhc3NlZCc6IFsnSk1CJywgJ1NCWSddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDF9LHsnS2V5Jzogeydzb3VyY2VDaXR5JzogJ0JLTCcsICdkZXN0aW5hdGlvbkNpdHknOiAnSk1CJywgJ3JvdXRlUGFzc2VkJzogWydKTUInLCAnQktMJ10sICdhY3Rpdml0eVJld2FyZHMnOiBOb25lfSwgJ1ZhbHVlJzogMX0seydLZXknOiB7J3NvdXJjZUNpdHknOiAnSk1CJywgJ2Rlc3RpbmF0aW9uQ2l0eSc6ICdQQlInLCAncm91dGVQYXNzZWQnOiBbJ1BCUicsICdKTUInXSwgJ2FjdGl2aXR5UmV3YXJkcyc6IE5vbmV9LCAnVmFsdWUnOiA2MH0seydLZXknOiB7J3NvdXJjZUNpdHknOiAnUExCJywgJ2Rlc3RpbmF0aW9uQ2l0eSc6ICdQQlInLCAncm91dGVQYXNzZWQnOiBbJ1BCUicsICdQTEInXSwgJ2FjdGl2aXR5UmV3YXJkcyc6IE5vbmV9LCAnVmFsdWUnOiAxMn0seydLZXknOiB7J3NvdXJjZUNpdHknOiAnTFBHJywgJ2Rlc3RpbmF0aW9uQ2l0eSc6ICdQQlInLCAncm91dGVQYXNzZWQnOiBbJ1BCUicsICdMUEcnXSwgJ2FjdGl2aXR5UmV3YXJkcyc6IE5vbmV9LCAnVmFsdWUnOiA2fSx7J0tleSc6IHsnc291cmNlQ2l0eSc6ICdQX0Jha2F1aGVuaScsICdkZXN0aW5hdGlvbkNpdHknOiAnUEJSJywgJ3JvdXRlUGFzc2VkJzogWydQQlInLCAnUF9CYWthdWhlbmknXSwgJ2FjdGl2aXR5UmV3YXJkcyc6IE5vbmV9LCAnVmFsdWUnOiA0fSx7J0tleSc6IHsnc291cmNlQ2l0eSc6ICdQX01lcmFrJywgJ2Rlc3RpbmF0aW9uQ2l0eSc6ICdQQlInLCAncm91dGVQYXNzZWQnOiBbJ1BCUicsICdQX01lcmFrJ10sICdhY3Rpdml0eVJld2FyZHMnOiBOb25lfSwgJ1ZhbHVlJzogM30seydLZXknOiB7J3NvdXJjZUNpdHknOiAnSktUJywgJ2Rlc3RpbmF0aW9uQ2l0eSc6ICdQQlInLCAncm91dGVQYXNzZWQnOiBbJ1BCUicsICdKS1QnXSwgJ2FjdGl2aXR5UmV3YXJkcyc6IE5vbmV9LCAnVmFsdWUnOiAyfSx7J0tleSc6IHsnc291cmNlQ2l0eSc6ICdDQk4nLCAnZGVzdGluYXRpb25DaXR5JzogJ1BCUicsICdyb3V0ZVBhc3NlZCc6IFsnUEJSJywgJ0NCTiddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDJ9LHsnS2V5Jzogeydzb3VyY2VDaXR5JzogJ1NNRycsICdkZXN0aW5hdGlvbkNpdHknOiAnUEJSJywgJ3JvdXRlUGFzc2VkJzogWydQQlInLCAnU01HJ10sICdhY3Rpdml0eVJld2FyZHMnOiBOb25lfSwgJ1ZhbHVlJzogMn0seydLZXknOiB7J3NvdXJjZUNpdHknOiAnU0JZJywgJ2Rlc3RpbmF0aW9uQ2l0eSc6ICdQQlInLCAncm91dGVQYXNzZWQnOiBbJ1BCUicsICdTQlknXSwgJ2FjdGl2aXR5UmV3YXJkcyc6IE5vbmV9LCAnVmFsdWUnOiAyfSx7J0tleSc6IHsnc291cmNlQ2l0eSc6ICdCS0wnLCAnZGVzdGluYXRpb25DaXR5JzogJ1BCUicsICdyb3V0ZVBhc3NlZCc6IFsnUEJSJywgJ0JLTCddLCAnYWN0aXZpdHlSZXdhcmRzJzogTm9uZX0sICdWYWx1ZSc6IDF9LF0KaGVhZGVycyA9IHsnVXNlci1BZ2VudCc6ICdVbml0eUVuZ2luZS1Vbml0eTsgVmVyc2lvbjogMjAxOC40LjI2ZjEnLCdYLVJlcG9ydEVycm9yQXNTdWNjZXNzJzogJ3RydWUnLCdYLVBsYXlGYWJTREsnOiAnVW5pdHlTREstMi4yMC4xNzA0MTEnLCdYLUF1dGhvcml6YXRpb24nOiAnJywnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLCdDb250ZW50LUxlbmd0aCc6ICcyMjMnLCdIb3N0JzogJzRhZTkucGxheWZhYmFwaS5jb20nfQoKZGVmIHJlbW92ZSgpOgogICAgICAgIGRhdGEgPSBqc29uLmR1bXBzKHsiRnVuY3Rpb25OYW1lIjoiUHVyY2hhc2VBY2Nlc3NvcmllcyIsIkZ1bmN0aW9uUGFyYW1ldGVyIjp7ImJ1cyI6IkpCLTAwMyIsImFjY1RvUHVyY2hhc2UiOltdLCJwUHJpY2VJRHMiOltdLCJhY2NUb1JlbW92ZSI6WyJDQUcxYi1SVDVJMCIsIkJBUjMtUlQwSTAiLCJCQ05TMS1MMFQyLjEwSTE1IiwiQkNOUzEtTDBUMi4xMEkxNiIsIkJDTlMxLUwwVDIuMTBJMTciLCJCQ05TMS1MMFQyLjEwSTE4IiwiQkNOUzEtTDBUMi4xMEkxOSIsIkJDTlMxLVJUMkkwIiwiQkNOUzEtUlQySTIiLCJCQ05TMS1SVDJJMSIsIkJDTlMxLVJUMkkzIiwiQkNOUzEtUlQySTQiLCJIUk4zLVJUOUkwIiwiSFJOMy1SVDlJMSIsIkJQUkYyLVJUM0kwIiwiV0lOMGItUlQzNUkwIiwiQkNOTDAtUlQxLjJJMCIsIkxHVFMxLVJUMTFJMCIsIk1GUFdGMi1SVDEzSTAiLCJMR1RTMS1SVDExSTEiLCJNRlBXUjEtUlQxNEkwIiwiTEdUUzEtUlQxMUkyIiwiQlBSUjMtUlQ0STAiLCJMR1RTMy1MNFQxMUk5IiwiTEdUUzMtTDRUMTFJMTAiLCJMR1RTMy1MNFQxMUkxMSIsIkJDTlMxLVJUMkk2IiwiQkNOUzEtUlQySTUiLCJCQ05TMS1SVDJJNyIsIlJBSzMtUlQxNUkwIiwiQkNOUzEtUlQySTEyIiwiQkNOUzEtUlQySTExIiwiQkNOUzEtUlQySTEwIiwiQkNOUzEtUlQySTkiLCJCQ05TMS1SVDJJOCIsIk1GUFdGMS1SVDEzSTEiLCJNRlBXUjEtUlQxNEkxIiwiU1BMMy1SVDE4STAiXSwiclByaWNlSURzIjpbIlAtQ0FHYyIsIlAtQkFSZSIsIlAtQkNObSIsIlAtQkNObSIsIlAtQkNObSIsIlAtQkNObSIsIlAtQkNObSIsIlAtQkNObSIsIlAtQkNObSIsIlAtQkNObSIsIlAtQkNObSIsIlAtQkNObSIsIlAtSFJOZSIsIlAtSFJOZSIsIlAtQlBSZSIsIlAtV0lObSIsIlAtQkNOZSIsIlAtTEdUYyIsIlAtTUZQZSIsIlAtTEdUYyIsIlAtTUZQbSIsIlAtTEdUYyIsIlAtQlBSbSIsIlAtTEdUYyIsIlAtTEdUYyIsIlAtTEdUYyIsIlAtQkNObSIsIlAtQkNObSIsIlAtQkNObSIsIlAtUkFLZSIsIlAtQkNObSIsIlAtQkNObSIsIlAtQkNObSIsIlAtQkNObSIsIlAtQkNObSIsIlAtTUZQbSIsIlAtTUZQbSIsIlAtU1BMbSJdLCJkaXNjb3VudERpY3QiOnsiQlBSRjItUlQzSTAiOkZhbHNlfX19KQogICAgICAgIHJlc3BvbnNlID0gcmVxdWVzdHMucG9zdCgnaHR0cHM6Ly80YWU5LnBsYXlmYWJhcGkuY29tL0NsaWVudC9FeGVjdXRlQ2xvdWRTY3JpcHQnLCBoZWFkZXJzPWhlYWRlcnMsIGRhdGE9ZGF0YSkudGV4dAogICAgICAgIGlmIHJlc3BvbnNlICE9ICcnOgogICAgICAgICAgICAgICAgcGFyc2VyID0ganNvbi5sb2FkcyhyZXNwb25zZSkKICAgICAgICAgICAgICAgIGlmIHBhcnNlclsnY29kZSddID09IDQwMToKICAgICAgICAgICAgICAgICAgICAgICAgcGFzcwogICAgICAgICAgICAgICAgZWxpZiBwYXJzZXJbJ2NvZGUnXSA9PSAyMDA6CiAgICAgICAgICAgICAgICAgICAgICAgIGJhY2tlbmRfZGF0YSA9IHBhcnNlclsnZGF0YSddCiAgICAgICAgICAgICAgICAgICAgICAgIGlmICJhcGlFcnJvciIgaW4gc3RyKGJhY2tlbmRfZGF0YSk6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGFzcwogICAgICAgICAgICAgICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgICAgICAgICAgICBwcmludChmIiIpCgoKZGVmIHBlbmlwdSgpOgogICAgICAgIGRhdGEgPSBqc29uLmR1bXBzKHsiRnVuY3Rpb25OYW1lIjoiUHVyY2hhc2VBY2Nlc3NvcmllcyIsIkZ1bmN0aW9uUGFyYW1ldGVyIjp7ImJ1cyI6IkpCLTAwMyIsImFjY1RvUHVyY2hhc2UiOlsiQlBSRjItUlQzSTAiLCJUUk40YS1SVDM2STAiLCJDQUczYS1SVDVJMCIsIkhSTjMtUlQ5STAiLCJIUk4zLVJUOUkxIiwiQkNOUzEtUlQySTAiLCJCQ05TMS1SVDJJMSIsIkJDTlMxLVJUMkkyIiwiQkNOUzEtUlQySTMiLCJCQ05MMC1SVDEuMkkwIiwiQkNOUzEtUlQySTQiLCJCQ05TMS1MMFQyLjEwSTE1IiwiQkNOUzEtTDBUMi4xMEkxNiIsIkJDTlMxLUwwVDIuMTBJMTkiLCJCQ05TMS1MMFQyLjEwSTE4IiwiQkNOUzEtTDBUMi4xMEkxNyIsIkJBUjMtUlQwSTAiLCJNRlBXRjItUlQxM0kwIiwiTEdUUzMtUlQxMUkwIiwiTEdUUzMtUlQxMUkxIiwiTUZQV1IzLVJUMTRJMCIsIkVYSDRhLVJUMzRJMCIsIkJQUlIzLVJUNEkwIiwiTEdUUzMtTDRUMTFJMTAiLCJMR1RTMy1MNFQxMUkxMSIsIkxHVFMzLUw0VDExSTkiLCJMR1RTMy1SVDExSTciLCJMR1RTMy1SVDExSTMiLCJCQ05TMS1SVDJJOCIsIkJDTlMxLVJUMkkxMiIsIkJDTlMxLVJUMkkxMSIsIkJDTlMxLVJUMkkxMCIsIkJDTlMxLVJUMkk5IiwiU1BMMy1SVDE4STAiLCJCQ05TMS1SVDJJNSIsIkJDTlMxLVJUMkk2IiwiQkNOUzEtUlQySTciLCJSQUszLVJUMTVJMCIsIldJTjNhLVJUMzVJMCIsIk1GUFdGMi1SVDEzSTEiLCJMR1RTMy1SVDExSTQiLCJMR1RTMy1SVDExSTUiLCJNRlBXUjMtUlQxNEkxIl0sInBQcmljZUlEcyI6WyJQLUJQUmUiLCJQLVRSTm0iLCJQLUNBR2UiLCJQLUhSTmUiLCJQLUhSTmUiLCJQLUJDTm0iLCJQLUJDTm0iLCJQLUJDTm0iLCJQLUJDTm0iLCJQLUJDTmUiLCJQLUJDTm0iLCJQLUJDTm0iLCJQLUJDTm0iLCJQLUJDTm0iLCJQLUJDTm0iLCJQLUJDTm0iLCJQLUJBUmUiLCJQLU1GUGUiLCJQLUxHVGMiLCJQLUxHVGMiLCJQLU1GUGUiLCJQLUVYSG0iLCJQLUJQUm0iLCJQLUxHVGMiLCJQLUxHVGMiLCJQLUxHVGMiLCJQLUxHVGMiLCJQLUxHVGMiLCJQLUJDTm0iLCJQLUJDTm0iLCJQLUJDTm0iLCJQLUJDTm0iLCJQLUJDTm0iLCJQLVNQTG0iLCJQLUJDTm0iLCJQLUJDTm0iLCJQLUJDTm0iLCJQLVJBS2UiLCJQLVdJTmUiLCJQLU1GUGUiLCJQLUxHVGMiLCJQLUxHVGMiLCJQLU1GUGUiXSwiYWNjVG9SZW1vdmUiOlsiQlBSRjMtUlQzSTAiXSwiclByaWNlSURzIjpbIlAtQlBSZSJdLCJkaXNjb3VudERpY3QiOnsiQlBSRjItUlQzSTAiOkZhbHNlLCJUUk40YS1SVDM2STAiOkZhbHNlLCJDQUczYS1SVDVJMCI6RmFsc2UsIkhSTjMtUlQ5STAiOkZhbHNlLCJIUk4zLVJUOUkxIjpGYWxzZSwiQkNOUzEtUlQySTAiOkZhbHNlLCJCQ05TMS1SVDJJMSI6RmFsc2UsIkJDTlMxLVJUMkkyIjpGYWxzZSwiQkNOUzEtUlQySTMiOkZhbHNlLCJCQ05MMC1SVDEuMkkwIjpGYWxzZSwiQkNOUzEtUlQySTQiOkZhbHNlLCJCQ05TMS1MMFQyLjEwSTE1IjpGYWxzZSwiQkNOUzEtTDBUMi4xMEkxNiI6RmFsc2UsIkJDTlMxLUwwVDIuMTBJMTkiOkZhbHNlLCJCQ05TMS1MMFQyLjEwSTE4IjpGYWxzZSwiQkNOUzEtTDBUMi4xMEkxNyI6RmFsc2UsIkJBUjMtUlQwSTAiOkZhbHNlLCJNRlBXRjItUlQxM0kwIjpGYWxzZSwiTEdUUzMtUlQxMUkwIjpGYWxzZSwiTEdUUzMtUlQxMUkxIjpGYWxzZSwiTUZQV1IzLVJUMTRJMCI6RmFsc2UsIkVYSDRhLVJUMzRJMCI6RmFsc2UsIkJQUlIzLVJUNEkwIjpGYWxzZSwiTEdUUzMtTDRUMTFJMTAiOkZhbHNlLCJMR1RTMy1MNFQxMUkxMSI6RmFsc2UsIkxHVFMzLUw0VDExSTkiOkZhbHNlLCJMR1RTMy1SVDExSTciOkZhbHNlLCJMR1RTMy1SVDExSTMiOkZhbHNlLCJCQ05TMS1SVDJJOCI6RmFsc2UsIkJDTlMxLVJUMkkxMiI6RmFsc2UsIkJDTlMxLVJUMkkxMSI6RmFsc2UsIkJDTlMxLVJUMkkxMCI6RmFsc2UsIkJDTlMxLVJUMkk5IjpGYWxzZSwiU1BMMy1SVDE4STAiOkZhbHNlLCJCQ05TMS1SVDJJNSI6RmFsc2UsIkJDTlMxLVJUMkk2IjpGYWxzZSwiQkNOUzEtUlQySTciOkZhbHNlLCJSQUszLVJUMTVJMCI6RmFsc2UsIldJTjNhLVJUMzVJMCI6RmFsc2UsIk1GUFdGMi1SVDEzSTEiOkZhbHNlLCJMR1RTMy1SVDExSTQiOkZhbHNlLCJMR1RTMy1SVDExSTUiOkZhbHNlLCJNRlBXUjMtUlQxNEkxIjpGYWxzZX19fSkKICAgICAgICByZXNwb25zZSA9IHJlcXVlc3RzLnBvc3QoJ2h0dHBzOi8vNGFlOS5wbGF5ZmFiYXBpLmNvbS9DbGllbnQvRXhlY3V0ZUNsb3VkU2NyaXB0JywgaGVhZGVycz1oZWFkZXJzLCBkYXRhPWRhdGEpLnRleHQKICAgICAgICBpZiByZXNwb25zZSAhPSAnJzoKICAgICAgICAgICAgICAgIHBhcnNlciA9IGpzb24ubG9hZHMocmVzcG9uc2UpCiAgICAgICAgICAgICAgICBpZiBwYXJzZXJbJ2NvZGUnXSA9PSA0MDE6CiAgICAgICAgICAgICAgICAgICAgICAgIHBhc3MKICAgICAgICAgICAgICAgIGVsaWYgcGFyc2VyWydjb2RlJ10gPT0gMjAwOgogICAgICAgICAgICAgICAgICAgICAgICBiYWNrZW5kX2RhdGEgPSBwYXJzZXJbJ2RhdGEnXQogICAgICAgICAgICAgICAgICAgICAgICBpZiAiYXBpRXJyb3IiIGluIHN0cihiYWNrZW5kX2RhdGEpOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhc3MKICAgICAgICAgICAgICAgICAgICAgICAgZWxzZToKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGF0ID0gYmFja2VuZF9kYXRhWydGdW5jdGlvblJlc3VsdCddCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdWFuZyA9IGNoYXRbJ2N1cnJlbnRNb25leSddCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJpbnQoZiJ7cmVkfSBb8J+StXtyZWR9XSB7eWVsbG93fUtVUkFTIFVCLT57Z3JlZW59IC0kNTAwLjAwMCIpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJpbnQoZiJ7dWFuZ30iKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICMga2V0aWsodWFuZykKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBrZXRpaygic3VkYWggZGlrdXJhbmdpIDUwMC4wMDAiKQogCgpkZWYgZ3hnKCk6CiAgICAgICAgZGF0YSA9IGpzb24uZHVtcHMoeyJJdGVtSWQiOiJEUkktMDAzIiwiVmlydHVhbEN1cnJlbmN5IjoiUlAiLCJQcmljZSI6MTAsIkNhdGFsb2dWZXJzaW9uIjoiZHJpdmVyLW1haW4iLCJTdG9yZUlkIjoiZHJpdmVyIn0pCiAgICAgICAgcmVzcG9uc2UgPSByZXF1ZXN0cy5wb3N0KCdodHRwczovLzRhZTkucGxheWZhYmFwaS5jb20vQ2xpZW50L1B1cmNoYXNlSXRlbScsIGhlYWRlcnM9aGVhZGVycywgZGF0YT1kYXRhKS50ZXh0CiAgICAgICAgaWYgcmVzcG9uc2UgIT0gJyc6CiAgICAgICAgICAgICAgICBwYXJzZXIgPSBqc29uLmxvYWRzKHJlc3BvbnNlKQogICAgICAgICAgICAgICAgaWYgcGFyc2VyWydjb2RlJ10gPT0gNDAxOgogICAgICAgICAgICAgICAgICAgICAgICBwYXNzCiAgICAgICAgICAgICAgICBlbGlmIHBhcnNlclsnY29kZSddID09IDIwMDoKICAgICAgICAgICAgICAgICAgICAgICAgYmFja2VuZF9kYXRhID0gcGFyc2VyWydkYXRhJ10KICAgICAgICAgICAgICAgICAgICAgICAgaWYgImFwaUVycm9yIiBpbiBzdHIoYmFja2VuZF9kYXRhKToKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYXNzCiAgICAgICAgICAgICAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICAgICAgICAgICAgIHByaW50KGYie2JhY2tlbmRfZGF0YX0iKQoKCmRlZiB0ZWgoKToKCiAgICBmb3IgaSBpbiByYW5nZShqdW0pOgoKCiAgICAgICAgICAgICAgICBwYXNzX21pc3N5dSgpCiAgICAgICAgICAgICAgICAjIG9zLnN5c3RlbSgiY2xzfHxjbGVhciIpCgpkZWYgbmdvcGkoKToKCiAgICBmb3IgaSBpbiByYW5nZShqdW0pOgoKCiAgICAgICAgICAgICAgICBwYXNzX2xvcHl1KCkKICAgICAgICAgICAgICAgICMgb3Muc3lzdGVtKCJjbHN8fGNsZWFyIikKCmRlZiBuZ29waWkoKToKCiAgICBmb3IgaSBpbiByYW5nZShoYXlhKToKCgogICAgICAgICAgICAgICAgcGFzc19oYXRleXUoKQogICAgICAgICAgICAgICAgIyBvcy5zeXN0ZW0oImNsc3x8Y2xlYXIiKQoKZGVmIGNyb3QoKToKCiAgICBmb3IgaSBpbiByYW5nZShnY2cpOgoKCiAgICAgICAgICAgICAgICBwYXNzX2xpa2V5dSgpCiAgICAgICAgICAgICAgICAjIG9zLnN5c3RlbSgiY2xzfHxjbGVhciIpCiAgICAgICAgICAgICAgICAKZGVmIGF0YWEoKToKCiAgICBmb3IgaSBpbiByYW5nZSh4ZCk6CgoKICAgICAgICAgICAgICAgIHBhc3NfbWVtZWsoKQogICAgICAgICAgICAgICAgIyBvcy5zeXN0ZW0oImNsc3x8Y2xlYXIiKQogICAgICAgICAgICAgICAgCmRlZiBtYW1wdXMoKToKICAgIGZvciBpIGluIHJhbmdlKGJsb2spOgogICAgICAgICAgICAgcmVtb3ZlKCkKICAgICAgICAgICAgIHBlbmlwdSgpCgpkZWYga2V0aWsoYyk6CiAgICBmb3IgZSBpbiBjICsgIlxuIiA6CiAgICAgICAgc3lzLnN0ZG91dC53cml0ZShlKQogICAgICAgIHN5cy5zdGRvdXQuZmx1c2goKQogICAgICAgIHNsZWVwKDAuMDA1KQpzeXN0ZW0oImNsZWFyIikKa2FsID0gZGF0ZXRpbWUubm93KCkKCgoKZGVmIG1lbnUxKCk6CiAgICBzeXN0ZW0oImNsZWFyIikKICAgIHN5cy5zdGRvdXQud3JpdGUoZSkKICAgIHN5cy5zdGRvdXQuZmx1c2goKQogICAgc2xlZXAoMC4wMDIpCgpkZWYgd2FybmluZygpOgogICAgZXhpdChmIkRBVEEgQUtVTiBCVVNTSUQgQU5EQSBHQUdBTCBESU1VQVQhIikKZGVmIG14eCgpOgogICAgICAgIGRhdGEgPSBqc29uLmR1bXBzKHsiUGxheUZhYklkIjpOb25lLCJJbmZvUmVxdWVzdFBhcmFtZXRlcnMiOnsiR2V0VXNlckFjY291bnRJbmZvIjpUcnVlLCJHZXRVc2VySW52ZW50b3J5IjpUcnVlLCJHZXRVc2VyVmlydHVhbEN1cnJlbmN5IjpUcnVlLCJHZXRVc2VyRGF0YSI6RmFsc2UsIlVzZXJEYXRhS2V5cyI6Tm9uZSwiR2V0VXNlclJlYWRPbmx5RGF0YSI6VHJ1ZSwiVXNlclJlYWRPbmx5RGF0YUtleXMiOk5vbmUsIkdldENoYXJhY3RlckludmVudG9yaWVzIjpGYWxzZSwiR2V0Q2hhcmFjdGVyTGlzdCI6RmFsc2UsIkdldFRpdGxlRGF0YSI6VHJ1ZSwiVGl0bGVEYXRhS2V5cyI6Tm9uZSwiR2V0UGxheWVyU3RhdGlzdGljcyI6RmFsc2UsIlBsYXllclN0YXRpc3RpY05hbWVzIjpOb25lfX0pCiAgICAgICAgcmVzcG9uc2UgPSByZXF1ZXN0cy5wb3N0KCdodHRwczovLzRhZTkucGxheWZhYmFwaS5jb20vQ2xpZW50L0dldFBsYXllckNvbWJpbmVkSW5mbycsIGhlYWRlcnM9aGVhZGVycywgZGF0YT1kYXRhKS50ZXh0CiAgICAgICAgaWYgcmVzcG9uc2UgIT0gJyc6CiAgICAgICAgICAgICAgICBwYXJzZXIgPSBqc29uLmxvYWRzKHJlc3BvbnNlKQogICAgICAgICAgICAgICAgaWYgcGFyc2VyWydjb2RlJ10gPT0gNDAxOgogICAgICAgICAgICAgICAgICAgICAgICBwYXNzCiAgICAgICAgICAgICAgICBlbGlmIHBhcnNlclsnY29kZSddID09IDIwMDoKICAgICAgICAgICAgICAgICAgICAgICAgYmFja2VuZF9kYXRhID0gcGFyc2VyWydkYXRhJ10KICAgICAgICAgICAgICAgICAgICAgICAgaWYgImFwaUVycm9yIiBpbiBzdHIoYmFja2VuZF9kYXRhKToKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYXNzCiAgICAgICAgICAgICAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hhdCA9IGJhY2tlbmRfZGF0YVsnSW5mb1Jlc3VsdFBheWxvYWQnXQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVhbmc9IGNoYXRbJ1VzZXJWaXJ0dWFsQ3VycmVuY3knXQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1vbmV5PSB1YW5nWydSUCddCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZmZmPSBjaGF0WydBY2NvdW50SW5mbyddCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgenp6PSBmZmZbJ1RpdGxlSW5mbyddCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgd3d3PSB6enpbJ1RpdGxlUGxheWVyQWNjb3VudCddCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2FhPSB3d3dbJ0lkJ10KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBnY2M9IGNoYXRbJ0FjY291bnRJbmZvJ10KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZD0gZ2NjWydUaXRsZUluZm8nXQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHlvdT0gaWRbJ0Rpc3BsYXlOYW1lJ10KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBrZXRpayhmIntncmVlbn0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIHt3aGl0ZX1JbmZvIEFrdW57Z3JlZW59IC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0iKSAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAga2V0aWsoZiIgICAgICAgICAgICAgICAgICAgICAgICAgIHt3aGl0ZX0gLSBUb3RhbCBNb25leSA6IHtncmVlbn17bW9uZXl9IikKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBrZXRpayhmIiAgICAgICAgICAgICAgICAgICAgICAgICAge3doaXRlfSAtIElEIEthbXUgOiB7Z3JlZW59e3lvdX0iKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGtldGlrKGYie2dyZWVufS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0iKQoKcHJpbnQoZiJ7Ymx1ZX3ilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqwiKQpwcmludChiYW5uZXIpCnByaW50KGYiICAgICAgICAgICAgICAgICAgICAgICB7Ymx1ZX1XaGF0c0FwcCA6IDA4MzEtNDE2MS0wODkxIikKcHJpbnQoZiJ7Ymx1ZX3ilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqwiKQpwcmludChmIiAgIHt5ZWxsb3d9IC0gQ3JlZGl0IHtncmVlbn1AUkVWT0VSQlVTU0lELiAgICAgICAgICAgICB7eWVsbG93fSAtIFNjcmlwdCB7Z3JlZW59RnJlZSIpCnByaW50KGYiIiIgICB7cmVkfSAtIEF1dGhvciB7Z3JlZW59QXRhYVhEICAgICAgICAgICAgICAge3JlZH0gICAgICAgLSBWZXJzaSB7Z3JlZW59IDEuMCAiIiIpCnByaW50KGYie2JsdWV94pas4pas4pas4pas4pas4pas4pas4pas4pas4pas4pas4pas4pas4pas4pas4pas4pas4pas4pas4pas4pas4pas4pas4pas4pas4pas4pas4pas4pas4pas4pas4pas4pas4pas4pas4pas4pas4pas4pas4pas4pas4pas4pas4pas4pas4pas4pas4pas4pas4pas4pas4pas4pas4pas4pas4pas4pas4pas4pas4pas4pas4pas4pas4pas4pas4pas4pas4pas4pas4pasIikKcHJpbnQoZiIgICAgICAgICAgICAgICAgICAgICAgICB7d2hpdGV9LSB7Z3JlZW59V2VsY29tZSB7dXNlcm5hbWV9IHt3aGl0ZX0tIikKcHJpbnQoZiIgICAgICAgICAgICAgICAgICAgICAgIHt3aGl0ZX0tIHt5ZWxsb3d9RXhwaXJlZCB7d2hpdGV9OiB7cmVkfXtleHBpcmVkX2RhdGUuc3RyZnRpbWUoJyVZLSVtLSVkJyl9IHt3aGl0ZX0tIikKbXh4KCkKcHJpbnQoZiJ7Ymx1ZX3ilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqzilqwiKQoKZGVmIGhhY2soKToKICAgIHJlbmFtZSgpCgoKaGVhZGVyc1snWC1BdXRob3JpemF0aW9uJ10gPSBhdXRoCmhhY2soKQpwcmludChmIiB7cmVkfSBQaWxpaCBTYWxhaCBTYXR1IE1lbnUgOiIpCnByaW50KGxvZ28pCgoKCmNvbnRvaCA9IGlucHV0IChmInt5ZWxsb3d94pWw4pSA4pSA4pSA4pa2IikKCgppZiBjb250b2ggPT0iMSI6CiAgIGp1bSA9IGludChpbnB1dChmInt5ZWxsb3d9e2dyZWVufVt7cmVkfeKXlSB7eWVsbG93feKXlSB7cmVkfeKXlXtncmVlbn1dIHt3aGl0ZX1KVU1MQUg6e3JlZH0gIikpCiAgIHRlaCgpCmVsaWYgY29udG9oID09IjAiOgogICBqdW0gPSBpbnQoaW5wdXQoZiJ7eWVsbG93fXtncmVlbn1be3JlZH3il5Uge3llbGxvd33il5Uge3JlZH3il5V7Z3JlZW59XSB7d2hpdGV9SlVNTEFIOntyZWR9ICIpKQogICBuZ29waSgpCmVsaWYgY29udG9oID09IjIiOgogICBoYXlhID0gaW50KGlucHV0KGYie3llbGxvd317Z3JlZW59W3tyZWR94peVIHt5ZWxsb3d94peVIHtyZWR94peVe2dyZWVufV0ge3doaXRlfUpVTUxBSDp7cmVkfSAiKSkKICAgbmdvcGlpKCkKZWxpZiBjb250b2ggPT0iMyI6CiAgICAgZ2NnID0gaW50KGlucHV0KGYie3llbGxvd317Z3JlZW59W3tyZWR94peVIHt5ZWxsb3d94peVIHtyZWR94peVe2dyZWVufV0ge3doaXRlfUpVTUxBSDp7cmVkfSAiKSkKICAgICBjcm90KCkKZWxpZiBjb250b2ggPT0iNyI6CiAgICAgeGQgPSBpbnQoaW5wdXQoZiJ7eWVsbG93fXtncmVlbn1be3JlZH3il5Uge3llbGxvd33il5Uge3JlZH3il5V7Z3JlZW59XSB7d2hpdGV9SlVNTEFIOntyZWR9ICIpKQogICAgIGF0YWEoKQplbGlmIGNvbnRvaCA9PSI0IjoKICAgICBibG9rID0gaW50KGlucHV0KGYie3llbGxvd317Z3JlZW59W3tyZWR94peVIHt5ZWxsb3d94peVIHtyZWR94peVe2dyZWVufV0ge3doaXRlfUpVTUxBSDp7cmVkfSAiKSkKICAgICBrZXRpaygiR1VOQUtBTiBGSVRVUiBJTkkgSklLQSBURVJUSVBVIikKICAgICBtYW1wdXMoKQoKCgplbGlmIGNvbnRvaCA9PSI1IjoKCiAgICAgZ3hnKCk='))